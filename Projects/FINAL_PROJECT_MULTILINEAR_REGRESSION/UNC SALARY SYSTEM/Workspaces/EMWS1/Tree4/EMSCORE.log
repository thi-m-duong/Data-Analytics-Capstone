*------------------------------------------------------------*
* Score Log
Date:                April 21, 2016
Time:                05:41:58
*------------------------------------------------------------*
16572  %let EMEXCEPTIONSTRING=;
16573  *------------------------------------------------------------*;
16574  * SCORE: Tree4;
16575  *------------------------------------------------------------*;
16576  %let EM_ACTION = SCORE;
16577  %let syscc = 0;
16578  %macro main;
16579  
16580    %if %upcase(&EM_ACTION) = CREATE %then %do;
16581      filename temp catalog 'sashelp.emmodl.tree_create.source';
16582      %include temp;
16583      filename temp;
16584  
16585      %em_tree_create;
16586    %end;
16587  
16588     %else
16589     %if %upcase(&EM_ACTION) = TRAIN %then %do;
16590  
16591         filename temp catalog 'sashelp.emmodl.tree_train.source';
16592         %include temp;
16593         filename temp;
16594         %em_tree_train;
16595     %end;
16596  
16597    %else
16598    %if %upcase(&EM_ACTION) = SCORE %then %do;
16599      filename temp catalog 'sashelp.emmodl.tree_score.source';
16600      %include temp;
16601      filename temp;
16602  
16603      %em_tree_score;
16604  
16605    %end;
16606  
16607    %else
16608    %if %upcase(&EM_ACTION) = REPORT %then %do;
16609  
16610         filename temp catalog 'sashelp.emmodl.tree_report.source';
16611         %include temp;
16612         filename temp;
16613  
16614         %em_tree_report;
16615     %end;
16616  
16617    %else
16618    %if %upcase(&EM_ACTION) = OPENINT %then %do;
16619  
16620         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16621         %include temp;
16622         filename temp;
16623         %EM_TREE_OPENTREEVIEWER;
16624  
16625     %end;
16626  
16627    %else
16628    %if %upcase(&EM_ACTION) = CLOSEINT %then %do;
16629  
16630         filename temp catalog 'sashelp.emmodl.tree_actions.source';
16631         %include temp;
16632         filename temp;
16633         %EM_TREE_CLOSETREEVIEWER;
16634  
16635     %end;
16636  
16637  
16638     %doendm:
16639  %mend main;
16640  
16641  %main;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMMODL.TREE_SCORE.SOURCE.
16643 +%macro em_tree_score;
16645 +   /* determine if multiple targets will be processed */
16646 +   %let em_tree_multipleTargets=N;
16647 +   %let em_tree_numTarget=1;
16648 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16649 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16650 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16651 +         %let em_tree_multipleTargets=N;
16652 +      %end;
16653 +      %else %do;
16654 +         /* create macro array of targets  */
16655 +         data _null_;
16656 +           set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16657 +           call symput('em_tree_targetVars'!!strip(put(_N_, BEST.)), strip(Name));
16658 +           if eof then
16659 +             call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16660 +        run;
16662 +        %if &em_tree_numTarget gt 1 %then %do;
16663 +           %let em_tree_multipleTargets=Y;
16664 +        %end;
16665 +      %end;
16666 +   %end;
16668 +   /* build flow and publish scoring code */
16669 +   %EM_GETNAME(key=TREEFLOW, type=FILE, extension=sas);
16670 +   %EM_GETNAME(key=TREEPUBLISH, type=FILE, extension=sas);
16672 +   filename treeflow "&EM_USER_TREEFLOW";
16673 +   filename treepub "&EM_USER_TREEPUBLISH";
16675 +   filename flowref  "&EM_FILE_EMFLOWSCORECODE";
16676 +   filename pubref   "&EM_FILE_EMPUBLISHSCORECODE";
16678 +   %em_copyfile(infref=treeflow, outfref=flowref);
16679 +   %em_copyfile(infref=treepub, outfref=pubref);
16681 +   filename treeflow;
16682 +   filename treepub;
16684 +   /* if priors are used, add code to generate unadjusted residuals in export */
16685 +   %let useAdjPriors = N;
16686 +   data _null_;
16687 +     set &EM_DEC_DECMETA(where=(_TYPE_="DECPRIOR"));
16688 +     if USE="Y" then call symput('useAdjPriors', 'Y');
16689 +   run;
16690 +   %if (("&em_tree_multipleTargets" eq "N") AND ("&useAdjPriors" eq "Y")) %then %do;
16691 +      filename temp catalog 'sashelp.emutil.em_makeunadjustedresidualvars.source';
16692 +      %include temp;
16693 +      filename temp;
16695 +      %EM_GETNAME(key=adjResidualCode, type=FILE, extension=sas);
16696 +      filename adjref "&EM_USER_adjResidualCode";
16697 +      %makeUnadjustedResidualVars(target=%EM_TARGET, decmeta=&EM_DEC_DECMETA, fref=adjref);
16699 +      %em_copyfile(infref=adjref, outfref=flowref, append=Y);
16701 +      filename adjref;
16702 +   %end;
16704 +   /* LEAF */
16705 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
16706 +      data _null_;
16707 +        file flowref mod;
16708 +        put 'drop _LEAF_;';
16709 +      run;
16711 +      data _null_;
16712 +        file pubref mod;
16713 +        put 'drop _LEAF_;';
16714 +      run;
16716 +   %end;
16718 +   filename flowref;
16719 +   filename pubref;
16721 +   /* em_metachange code */
16722 +   %if "&EM_PROPERTY_LEAFID" eq "Y" %then %do;
16723 +     %EM_METACHANGE(name=_NODE_, role=&EM_PROPERTY_NODEROLE, LEVEL=NOMINAL);
16724 +   %end;
16726 +   /* variable selection based on importance stat    */
16727 +   %if "&EM_PROPERTY_VARSELECTION" eq "Y" %then %do;
16728 +     %EM_GETNAME(key=OUTIMPORT, type=DATA);
16729 +     %let dsid = %sysfunc(open(&EM_USER_OUTIMPORT(where=(IMPORTANCE<0.05))));
16730 +     %let varnum = %sysfunc(varnum(&dsid, NAME));
16731 +     %let obs = %sysfunc(fetch(&dsid));
16732 +     %do %while(&obs=0);
16733 +       %let temp = %nrbquote(%sysfunc(getvarc(&dsid, &varnum)));
16734 +       %let varname = %nrbquote(%sysfunc(tranwrd(&temp,  %str(%"),"")));
16735 +       %EM_METACHANGE(name=&varname, role=REJECTED);
16736 +       %let obs = %sysfunc(fetch(&dsid));
16737 +     %end;
16738 +     %if &dsid %then %let dsid=%sysfunc(close(&dsid));
16739 +   %end;
16741 +   /* set Q_ varaibles to role of ASSESS when in the presense of prior probabilities */
16742 +   %if %sysfunc(exist(&EM_DEC_DECMETA)) %then %do;
16743 +    %let tree_pred_vars = ;
16744 +    %let tree_pred_lvl =;
16745 +    %let numpred= 0;
16747 +    data _null_;
16748 +     set &EM_DEC_DECMETA(where=(_TYPE_="PREDICTED")) end=eof;
16749 +     call symput('tree_pred_vars'!!strip(put(_N_, BEST.)), strip(VARIABLE));
16750 +     call symput('tree_pred_lvl'!!strip(put(_N_, BEST.)), strip(LEVEL));
16751 +     if eof then
16752 +       call symput('numpred', strip(put(_N_, BEST.)));
16753 +    run;
16754 +   %end;
16756 +   %if &numpred ne 0 %then %do;
16757 +    %do i=1 %to &numpred;
16758 +      %let qpred = Q%substr(&&tree_pred_vars&i,2);
16759 +      %EM_METACHANGE(name=&qpred, role=ASSESS);
16760 +    %end;
16761 +   %end;
16763 +   /* determine if multiple targets will be processed */
16764 +   %let em_tree_multipleTargets=N;
16765 +   %let em_tree_numTarget=1;
16766 +   %if "&EM_PROPERTY_USEMULTIPLETARGET" eq "Y" %then %do;
16767 +      /* determine if there are any ordinal target variables - if so, multiple targets are not supported */
16768 +      %if &EM_NUM_ORDINAL_TARGET gt 0 %then %do;
16769 +         %let em_tree_multipleTargets=N;
16770 +      %end;
16771 +      %else %do;
16772 +        data _null_;
16773 +          set &EM_DATA_VARIABLESET(where=(ROLE='TARGET' AND LEVEL^='ORDINAL')) end=eof;
16774 +          if eof then
16775 +            call symput('em_tree_numTarget', strip(put(_N_, BEST.)));
16776 +        run;
16778 +        %if &em_tree_numTarget gt 1 %then %do;
16779 +           %let em_tree_multipleTargets=Y;
16780 +        %end;
16781 +     %end;
16782 +   %end;
16784 +   /* need to include this code to do the %em_report for OUTIMPORT here instead of in Report code so _loop data set is created when group processing */
16785 +   %if "&em_tree_multipleTargets" eq "N" %then %do;
16787 +      /* variable importance */
16788 +      %EM_GETNAME(key=OUTIMPORT, type=DATA);
16789 +      %if %sysfunc(exist(&EM_USER_OUTIMPORT)) eq 1 %then %do;
16791 +         %let validexist=0;
16792 +         %if (("&EM_IMPORT_VALIDATE" ne "") AND (%sysfunc(exist(&EM_IMPORT_VALIDATE)) or %sysfunc(exist(&EM_IMPORT_VALIDATE,VIEW)))) %then %do;
16793 +           %let validexist=1;
16794 +         %end;
16796 +         /* determine if vars exists - properties could indicate they are they but freeze=Y would mean the node wasn't retrained */
16797 +         /* and the columns may not be generated                                                                                 */
16798 +         %let em_tree_cvexists=;
16799 +         %let em_tree_surrexists=.;
16800 +         data _null_;
16801 +            set &EM_USER_OUTIMPORT (obs=2) end=eof;
16802 +            if eof then do ;
16803 +               call symput("em_tree_cvexists" , strip(put(cvimportance,best.))) ;
16804 +               call symput("em_tree_surrexists", strip(put(nsurrogates, best.)));
16805 +            end;
16806 +         run;
16808 +         data &EM_USER_OUTIMPORT;
16809 +            set &EM_USER_OUTIMPORT;
16811 +            /* format columns based on Precison value specified */
16812 +            format importance 15.&EM_PROPERTY_PRECISION
16813 +                 %if &validexist %then %do;
16814 +                   vimportance ratio 15.&EM_PROPERTY_PRECISION
16815 +                 %end;
16816 +                 %if "&EM_TREE_CVEXISTS" ne "." %then %do;
16817 +                   cvimportance vimportance ratio 15.&EM_PROPERTY_PRECISION
16818 +                 %end;
16819 +            ;
16820 +            label  NAME       = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel, noquote))"
16821 +                 LABEL        = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, noquote))"
16822 +                 NRULES       = "%sysfunc(sasmsg(sashelp.dmine, rpt_nrules_vlabel, noquote))"
16823 +                 IMPORTANCE   = "%sysfunc(sasmsg(sashelp.dmine, rpt_importance_vlabel, noquote))"
16824 +                 %if "&em_tree_surrexists" ne "" %then %do;
16825 +                   NSURROGATES  = "%sysfunc(sasmsg(sashelp.dmine, rpt_nsurrogates_vlabel, noquote))"
16826 +                 %end;
16827 +                 %if &validexist %then %do;
16828 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
16829 +                   RATIO       = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
16830 +                 %end;
16831 +                 %if "&EM_TREE_CVEXISTS" ne "" %then %do;
16832 +                   VIMPORTANCE = "%sysfunc(sasmsg(sashelp.dmine, rpt_vimportance_vlabel, noquote))"
16833 +                   CVIMPORTANCE =  "%sysfunc(sasmsg(sashelp.dmine, rpt_cvimport_vlabel, noquote))"
16834 +                   CVRULES= "%sysfunc(sasmsg(sashelp.dmine, rpt_cvrules_vlabel, noquote))"
16835 +                   RATIO = "%sysfunc(sasmsg(sashelp.dmine, rpt_ratio_vlabel, noquote))"
16836 +                 %end;
16837 +            ;
16838 +         run;
16840 +         %EM_REPORT(key=OUTIMPORT, viewtype=DATA, block=MODEL, description=IMPORTANCE, autodisplay=N);
16841 +      %end;
16842 +   %end;
16844 +   %doendm:
16845 +%mend em_tree_score;
NOTE: %INCLUDE (level 1) ending.
NOTE: Fileref TEMP has been deassigned.

NOTE: The file FLOWREF is:
      Filename=C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=21Apr2016:05:41:58,
      Create Time=21Apr2016:05:41:58

NOTE: 663 records were written to the file FLOWREF.
      The minimum record length was 1.
      The maximum record length was 71.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      


NOTE: The file PUBREF is:
      Filename=C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=20000,File Size (bytes)=0,
      Last Modified=21Apr2016:05:41:58,
      Create Time=21Apr2016:05:41:58

NOTE: 658 records were written to the file PUBREF.
      The minimum record length was 1.
      The maximum record length was 71.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: Fileref TREEFLOW has been deassigned.
NOTE: Fileref TREEPUB has been deassigned.

NOTE: There were 0 observations read from the data set EMWS1.IDS_TOTALSAL_DM.
      WHERE _TYPE_='DECPRIOR';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: The file FLOWREF is:
      Filename=C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\EMFLOWSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=25453,
      Last Modified=21Apr2016:05:41:58,
      Create Time=21Apr2016:05:41:58

NOTE: 1 record was written to the file FLOWREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: The file PUBREF is:
      Filename=C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\EMPUBLISHSCORE.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=25280,
      Last Modified=21Apr2016:05:41:58,
      Create Time=21Apr2016:05:41:58

NOTE: 1 record was written to the file PUBREF.
      The minimum record length was 12.
      The maximum record length was 12.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: Fileref FLOWREF has been deassigned.
NOTE: Fileref PUBREF has been deassigned.

NOTE: The data set WORK.EM_METACHANGE has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 2 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 3 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 4 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 5 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: There were 6 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: There were 7 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      


NOTE: There were 8 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 9 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      


NOTE: There were 9 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      


NOTE: There were 10 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 1 observations read from the data set EMWS1.IDS_TOTALSAL_DM.
      WHERE _TYPE_='PREDICTED';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: There were 11 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: Variable cvimportance is uninitialized.
NOTE: Variable nsurrogates is uninitialized.
NOTE: There were 2 observations read from the data set EMWS1.TREE4_OUTIMPORT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      


NOTE: Variable NSURROGATES is uninitialized.
NOTE: Variable CVIMPORTANCE is uninitialized.
NOTE: Variable CVRULES is uninitialized.
NOTE: There were 12 observations read from the data set EMWS1.TREE4_OUTIMPORT.
NOTE: The data set EMWS1.TREE4_OUTIMPORT has 12 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      


NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

16846  
16847  *------------------------------------------------------------*;
16848  * End SCORE: Tree4;
16849  *------------------------------------------------------------*;

16850  proc sort data=WORK.EM_METACHANGE;
16851  by key uname;
16852  run;

NOTE: There were 12 observations read from the data set WORK.EM_METACHANGE.
NOTE: The data set WORK.EM_METACHANGE has 12 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16853  filename x "C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\CDELTA_TRAIN.sas";
16854  data _null_;
16855  file x;
16856  put 'if upcase(NAME) = "AGE" then do;';
16857  put 'ROLE = "REJECTED";';
16858  put 'end;';
16859  put 'else ';
16860  put 'if upcase(NAME) = "CAMPUS" then do;';
16861  put 'ROLE = "REJECTED";';
16862  put 'end;';
16863  put 'else ';
16864  put 'if upcase(NAME) = "DEPT" then do;';
16865  put 'ROLE = "REJECTED";';
16866  put 'end;';
16867  put 'else ';
16868  put 'if upcase(NAME) = "EMPLOYED" then do;';
16869  put 'ROLE = "REJECTED";';
16870  put 'end;';
16871  put 'else ';
16872  put 'if upcase(NAME) = "EXEMPT2" then do;';
16873  put 'ROLE = "REJECTED";';
16874  put 'end;';
16875  put 'else ';
16876  put 'if upcase(NAME) = "FTE" then do;';
16877  put 'ROLE = "REJECTED";';
16878  put 'end;';
16879  put 'else ';
16880  put 'if upcase(NAME) = "GENDER" then do;';
16881  put 'ROLE = "REJECTED";';
16882  put 'end;';
16883  put 'else ';
16884  put 'if upcase(NAME) = "POSITION" then do;';
16885  put 'ROLE = "REJECTED";';
16886  put 'end;';
16887  put 'else ';
16888  put 'if upcase(NAME) = "Q_TOTALSAL" then do;';
16889  put 'ROLE = "ASSESS";';
16890  put 'end;';
16891  put 'else ';
16892  put 'if upcase(NAME) = "STATUS" then do;';
16893  put 'ROLE = "REJECTED";';
16894  put 'end;';
16895  put 'else ';
16896  put 'if upcase(NAME) = "STSERVYR" then do;';
16897  put 'ROLE = "REJECTED";';
16898  put 'end;';
16899  put 'else ';
16900  put 'if upcase(NAME) = "_NODE_" then do;';
16901  put 'ROLE = "SEGMENT";';
16902  put 'LEVEL = "NOMINAL";';
16903  put 'end;';
16904  run;

NOTE: The file X is:
      Filename=C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=21Apr2016:05:42:03,
      Create Time=20Apr2016:23:04:44

NOTE: 48 records were written to the file X.
      The minimum record length was 4.
      The maximum record length was 39.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

16905  filename x;
NOTE: Fileref X has been deassigned.

16906  filename emflow "C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\EMFLOWSCORE.sas";
16907  *------------------------------------------------------------*;
16908  * Tree4: Scoring DATA data;
16909  *------------------------------------------------------------*;
16910  data EMWS1.Tree4_TRAIN
16911  / view=EMWS1.Tree4_TRAIN
16912  ;
16913  set EMWS1.Part_TRAIN
16914  ;
16915  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\EMFLOWSCORE.sas.
16916 +****************************************************************;
16917 +******             DECISION TREE SCORING CODE             ******;
16918 +****************************************************************;
16919 +
16920 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
16921 +LENGTH _WARN_  $    4;
16922 +
16923 +******              LABELS FOR NEW VARIABLES              ******;
16924 +label _NODE_ = 'Node' ;
16925 +label _LEAF_ = 'Leaf' ;
16926 +label P_totalsal = 'Predicted: totalsal' ;
16927 +label V_totalsal = 'Validated: totalsal' ;
16928 +label R_totalsal = 'Residual: totalsal' ;
16929 +label _WARN_ = 'Warnings' ;
16930 +
16931 +
16932 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
16933 +LENGTH _ARBFMT_30 $     30; DROP _ARBFMT_30;
16934 +_ARBFMT_30 = ' '; /* Initialize to avoid warning. */
16935 +LENGTH _ARBFMT_28 $     28; DROP _ARBFMT_28;
16936 +_ARBFMT_28 = ' '; /* Initialize to avoid warning. */
16937 +
16938 +
16939 +******             ASSIGN OBSERVATION TO NODE             ******;
16940 +IF  NOT MISSING(nonstsal ) AND
16941 +               95900.5 <= nonstsal  AND
16942 +  nonstsal  <             180312.5 THEN DO;
16943 +  IF  NOT MISSING(statesal ) AND
16944 +                    2599 <= statesal  AND
16945 +    statesal  <              15464.5 THEN DO;
16946 +    _NODE_  =                   11;
16947 +    _LEAF_  =                   69;
16948 +    P_totalsal  =     145295.301886792;
16949 +    V_totalsal  =     138556.863636363;
16950 +    END;
16951 +  ELSE IF  NOT MISSING(statesal ) AND
16952 +                 15464.5 <= statesal  AND
16953 +    statesal  <                48253 THEN DO;
16954 +    _NODE_  =                   12;
16955 +    _LEAF_  =                   70;
16956 +    P_totalsal  =     166528.224137931;
16957 +    V_totalsal  =     155472.709677419;
16958 +    END;
16959 +  ELSE IF  NOT MISSING(statesal ) AND
16960 +                   48253 <= statesal  THEN DO;
16961 +    _NODE_  =                   13;
16962 +    _LEAF_  =                   71;
16963 +    P_totalsal  =            233685.12;
16964 +    V_totalsal  =      231484.59090909;
16965 +    END;
16966 +  ELSE DO;
16967 +    IF  NOT MISSING(nonstsal ) AND
16968 +                    109950 <= nonstsal  AND
16969 +      nonstsal  <             120749.5 THEN DO;
16970 +      _NODE_  =                   27;
16971 +      _LEAF_  =                   66;
16972 +      P_totalsal  =     114770.807692307;
16973 +      V_totalsal  =            115916.45;
16974 +      END;
16975 +    ELSE IF  NOT MISSING(nonstsal ) AND
16976 +                  120749.5 <= nonstsal  AND
16977 +      nonstsal  <             149359.5 THEN DO;
16978 +      _NODE_  =                   28;
16979 +      _LEAF_  =                   67;
16980 +      P_totalsal  =     134294.632653061;
16981 +      V_totalsal  =     135776.804878048;
16982 +      END;
16983 +    ELSE IF  NOT MISSING(nonstsal ) AND
16984 +                  149359.5 <= nonstsal  THEN DO;
16985 +      _NODE_  =                   29;
16986 +      _LEAF_  =                   68;
16987 +      P_totalsal  =     165185.515151515;
16988 +      V_totalsal  =     166636.777777777;
16989 +      END;
16990 +    ELSE DO;
16991 +      _NODE_  =                   26;
16992 +      _LEAF_  =                   65;
16993 +      P_totalsal  =     101778.095238095;
16994 +      V_totalsal  =     102117.243902439;
16995 +      END;
16996 +    END;
16997 +  END;
16998 +ELSE IF  NOT MISSING(nonstsal ) AND
16999 +              180312.5 <= nonstsal  AND
17000 +  nonstsal  <             290367.5 THEN DO;
17001 +  IF  NOT MISSING(nonstsal ) AND
17002 +    nonstsal  <             209437.5 THEN DO;
17003 +    _NODE_  =                   14;
17004 +    _LEAF_  =                   72;
17005 +    P_totalsal  =     205333.694117647;
17006 +    V_totalsal  =     204150.071428571;
17007 +    END;
17008 +  ELSE IF  NOT MISSING(nonstsal ) AND
17009 +                209437.5 <= nonstsal  AND
17010 +    nonstsal  <               235147 THEN DO;
17011 +    _NODE_  =                   15;
17012 +    _LEAF_  =                   73;
17013 +    P_totalsal  =     234605.621212121;
17014 +    V_totalsal  =     241105.225806451;
17015 +    END;
17016 +  ELSE DO;
17017 +    _NODE_  =                   16;
17018 +    _LEAF_  =                   74;
17019 +    P_totalsal  =     273957.193877551;
17020 +    V_totalsal  =     271501.285714285;
17021 +    END;
17022 +  END;
17023 +ELSE IF  NOT MISSING(nonstsal ) AND
17024 +              290367.5 <= nonstsal  THEN DO;
17025 +  _NODE_  =                    5;
17026 +  _LEAF_  =                   75;
17027 +  P_totalsal  =     389678.802631579;
17028 +  V_totalsal  =     377767.533333333;
17029 +  END;
17030 +ELSE DO;
17031 +  IF  NOT MISSING(statesal ) AND
17032 +                 60301.5 <= statesal  AND
17033 +    statesal  <               108099 THEN DO;
17034 +    IF  NOT MISSING(nonstsal ) AND
17035 +                    9900.5 <= nonstsal  AND
17036 +      nonstsal  <              34813.5 THEN DO;
17037 +      _NODE_  =                   22;
17038 +      _LEAF_  =                   58;
17039 +      P_totalsal  =     103556.683673469;
17040 +      V_totalsal  =     104522.135135135;
17041 +      END;
17042 +    ELSE IF  NOT MISSING(nonstsal ) AND
17043 +                   34813.5 <= nonstsal  THEN DO;
17044 +      _NODE_  =                   23;
17045 +      _LEAF_  =                   59;
17046 +      P_totalsal  =     141148.098901098;
17047 +      V_totalsal  =             136074.7;
17048 +      END;
17049 +    ELSE DO;
17050 +      IF  NOT MISSING(statesal ) AND
17051 +                       71097 <= statesal  AND
17052 +        statesal  <              81763.5 THEN DO;
17053 +        IF  NOT MISSING(statesal ) AND
17054 +          statesal  <                74875 THEN DO;
17055 +          _NODE_  =                   72;
17056 +          _LEAF_  =                   51;
17057 +          P_totalsal  =     73448.6666666666;
17058 +          V_totalsal  =     73306.9090909091;
17059 +          END;
17060 +        ELSE IF  NOT MISSING(statesal ) AND
17061 +                         74875 <= statesal  AND
17062 +          statesal  <                76825 THEN DO;
17063 +          _NODE_  =                   73;
17064 +          _LEAF_  =                   52;
17065 +          P_totalsal  =     75918.0727272727;
17066 +          V_totalsal  =     76591.7058823529;
17067 +          END;
17068 +        ELSE DO;
17069 +          _NODE_  =                   74;
17070 +          _LEAF_  =                   53;
17071 +          P_totalsal  =     79991.7974683544;
17072 +          V_totalsal  =     79243.1842105263;
17073 +          END;
17074 +        END;
17075 +      ELSE IF  NOT MISSING(statesal ) AND
17076 +                     81763.5 <= statesal  AND
17077 +        statesal  <                92774 THEN DO;
17078 +        IF  NOT MISSING(statesal ) AND
17079 +          statesal  <                84994 THEN DO;
17080 +          _NODE_  =                   75;
17081 +          _LEAF_  =                   54;
17082 +          P_totalsal  =     84096.6315789473;
17083 +          V_totalsal  =             84898.44;
17084 +          END;
17085 +        ELSE DO;
17086 +          _NODE_  =                   76;
17087 +          _LEAF_  =                   55;
17088 +          P_totalsal  =     90010.5222222222;
17089 +          V_totalsal  =     89579.7142857143;
17090 +          END;
17091 +        END;
17092 +      ELSE IF  NOT MISSING(statesal ) AND
17093 +                       92774 <= statesal  THEN DO;
17094 +        IF  NOT MISSING(statesal ) AND
17095 +                        100867 <= statesal  THEN DO;
17096 +          _NODE_  =                   78;
17097 +          _LEAF_  =                   57;
17098 +          P_totalsal  =             105425.5;
17099 +          V_totalsal  =     105827.566666666;
17100 +          END;
17101 +        ELSE DO;
17102 +          _NODE_  =                   77;
17103 +          _LEAF_  =                   56;
17104 +          P_totalsal  =     97038.7866666666;
17105 +          V_totalsal  =                97273;
17106 +          END;
17107 +        END;
17108 +      ELSE DO;
17109 +        IF  NOT MISSING(statesal ) AND
17110 +          statesal  <              63410.5 THEN DO;
17111 +          _NODE_  =                   69;
17112 +          _LEAF_  =                   48;
17113 +          P_totalsal  =     62533.6964285714;
17114 +          V_totalsal  =     63382.3870967742;
17115 +          END;
17116 +        ELSE IF  NOT MISSING(statesal ) AND
17117 +                       63410.5 <= statesal  AND
17118 +          statesal  <              66247.5 THEN DO;
17119 +          _NODE_  =                   70;
17120 +          _LEAF_  =                   49;
17121 +          P_totalsal  =     65306.0196078431;
17122 +          V_totalsal  =     64981.0689655172;
17123 +          END;
17124 +        ELSE DO;
17125 +          _NODE_  =                   71;
17126 +          _LEAF_  =                   50;
17127 +          P_totalsal  =     69608.8775510204;
17128 +          V_totalsal  =     70048.5675675675;
17129 +          END;
17130 +        END;
17131 +      END;
17132 +    END;
17133 +  ELSE IF  NOT MISSING(statesal ) AND
17134 +                  108099 <= statesal  AND
17135 +    statesal  <               162093 THEN DO;
17136 +    IF  NOT MISSING(nonstsal ) AND
17137 +                   22783.5 <= nonstsal  THEN DO;
17138 +      _NODE_  =                   25;
17139 +      _LEAF_  =                   63;
17140 +      P_totalsal  =             172191.4;
17141 +      V_totalsal  =     175374.619047619;
17142 +      END;
17143 +    ELSE DO;
17144 +      IF  NOT MISSING(statesal ) AND
17145 +                    130026.5 <= statesal  THEN DO;
17146 +        _NODE_  =                   47;
17147 +        _LEAF_  =                   62;
17148 +        P_totalsal  =     147090.839080459;
17149 +        V_totalsal  =          147979.8125;
17150 +        END;
17151 +      ELSE DO;
17152 +        IF  NOT MISSING(statesal ) AND
17153 +                      117576.5 <= statesal  THEN DO;
17154 +          _NODE_  =                   80;
17155 +          _LEAF_  =                   61;
17156 +          P_totalsal  =     128431.728813559;
17157 +          V_totalsal  =     126284.958333333;
17158 +          END;
17159 +        ELSE DO;
17160 +          _NODE_  =                   79;
17161 +          _LEAF_  =                   60;
17162 +          P_totalsal  =          116553.6625;
17163 +          V_totalsal  =     115684.620689655;
17164 +          END;
17165 +        END;
17166 +      END;
17167 +    END;
17168 +  ELSE IF  NOT MISSING(statesal ) AND
17169 +                  162093 <= statesal  THEN DO;
17170 +    _NODE_  =                    9;
17171 +    _LEAF_  =                   64;
17172 +    P_totalsal  =     224578.765306122;
17173 +    V_totalsal  =     236071.901960784;
17174 +    END;
17175 +  ELSE DO;
17176 +    IF  NOT MISSING(nonstsal ) AND
17177 +                   43903.5 <= nonstsal  AND
17178 +      nonstsal  <              57561.5 THEN DO;
17179 +      IF  NOT MISSING(nonstsal ) AND
17180 +        nonstsal  <              47236.5 THEN DO;
17181 +        _ARBFMT_30 = PUT( exempt2 , $30.);
17182 +         %DMNORMIP( _ARBFMT_30);
17183 +        IF _ARBFMT_30 IN ('EXEMPT' ) THEN DO;
17184 +          _NODE_  =                   60;
17185 +          _LEAF_  =                   30;
17186 +          P_totalsal  =     54232.3275862069;
17187 +          V_totalsal  =     55741.5263157894;
17188 +          END;
17189 +        ELSE DO;
17190 +          _NODE_  =                   59;
17191 +          _LEAF_  =                   29;
17192 +          P_totalsal  =     45695.6432160804;
17193 +          V_totalsal  =     47597.4642857142;
17194 +          END;
17195 +        END;
17196 +      ELSE IF  NOT MISSING(nonstsal ) AND
17197 +                       52023 <= nonstsal  THEN DO;
17198 +        _NODE_  =                   36;
17199 +        _LEAF_  =                   35;
17200 +        P_totalsal  =     56000.9809160305;
17201 +        V_totalsal  =     56889.7950819672;
17202 +        END;
17203 +      ELSE DO;
17204 +        _ARBFMT_28 = PUT( position , $28.);
17205 +         %DMNORMIP( _ARBFMT_28);
17206 +        IF _ARBFMT_28 IN ('OTHER' ) THEN DO;
17207 +          _NODE_  =                   61;
17208 +          _LEAF_  =                   31;
17209 +          P_totalsal  =     50091.2717391304;
17210 +          V_totalsal  =     50038.6444444444;
17211 +          END;
17212 +        ELSE IF _ARBFMT_28 IN ('ADMIN' ,'ASSISTANT OTHER' ,'BUILDING' ,
17213 +          'CLINICAL OTHER' ,'CLINICAL RESEARCH' ) THEN DO;
17214 +          _NODE_  =                   62;
17215 +          _LEAF_  =                   32;
17216 +          P_totalsal  =     49622.3728813559;
17217 +          V_totalsal  =     49552.6071428571;
17218 +          END;
17219 +        ELSE IF _ARBFMT_28 IN ('EXECUTIVE' ,'RESEARCH OTHER' ,
17220 +        'OTHER PROGRAM' ,'PROJECT MANAGER' ,'RESEARCH ASSOCIATE' ,
17221 +          'RESEARCH SPECIALIST' ,'RESEARCH TECHNICIAN' ) THEN DO;
17222 +          _NODE_  =                   64;
17223 +          _LEAF_  =                   34;
17224 +          P_totalsal  =          50058.90625;
17225 +          V_totalsal  =                49517;
17226 +          END;
17227 +        ELSE DO;
17228 +          _NODE_  =                   63;
17229 +          _LEAF_  =                   33;
17230 +          P_totalsal  =     57550.0181818181;
17231 +          V_totalsal  =     56288.8518518518;
17232 +          END;
17233 +        END;
17234 +      END;
17235 +    ELSE IF  NOT MISSING(nonstsal ) AND
17236 +                   57561.5 <= nonstsal  AND
17237 +      nonstsal  <                74256 THEN DO;
17238 +      IF  NOT MISSING(statesal ) AND
17239 +                        8802 <= statesal  THEN DO;
17240 +        _NODE_  =                   38;
17241 +        _LEAF_  =                   44;
17242 +        P_totalsal  =              94400.2;
17243 +        V_totalsal  =     98545.4285714285;
17244 +        END;
17245 +      ELSE DO;
17246 +        IF  NOT MISSING(nonstsal ) AND
17247 +          nonstsal  <              60502.5 THEN DO;
17248 +          IF  NOT MISSING(nonstsal ) AND
17249 +            nonstsal  <              59070.5 THEN DO;
17250 +            _NODE_  =                  108;
17251 +            _LEAF_  =                   36;
17252 +            P_totalsal  =             58257.96;
17253 +            V_totalsal  =              58209.6;
17254 +            END;
17255 +          ELSE DO;
17256 +            _NODE_  =                  109;
17257 +            _LEAF_  =                   37;
17258 +            P_totalsal  =     59803.3114754098;
17259 +            V_totalsal  =     59782.6296296296;
17260 +            END;
17261 +          END;
17262 +        ELSE IF  NOT MISSING(nonstsal ) AND
17263 +                       60502.5 <= nonstsal  AND
17264 +          nonstsal  <              64148.5 THEN DO;
17265 +          IF  NOT MISSING(nonstsal ) AND
17266 +                           62434 <= nonstsal  THEN DO;
17267 +            _NODE_  =                  111;
17268 +            _LEAF_  =                   39;
17269 +            P_totalsal  =     63386.0882352941;
17270 +            V_totalsal  =             63171.84;
17271 +            END;
17272 +          ELSE DO;
17273 +            _NODE_  =                  110;
17274 +            _LEAF_  =                   38;
17275 +            P_totalsal  =     61480.6913580247;
17276 +            V_totalsal  =     61572.9210526315;
17277 +            END;
17278 +          END;
17279 +        ELSE IF  NOT MISSING(nonstsal ) AND
17280 +                       64148.5 <= nonstsal  AND
17281 +          nonstsal  <                68310 THEN DO;
17282 +          IF  NOT MISSING(nonstsal ) AND
17283 +                         66244.5 <= nonstsal  THEN DO;
17284 +            _NODE_  =                  113;
17285 +            _LEAF_  =                   41;
17286 +            P_totalsal  =     67381.0434782608;
17287 +            V_totalsal  =             67396.05;
17288 +            END;
17289 +          ELSE DO;
17290 +            _NODE_  =                  112;
17291 +            _LEAF_  =                   40;
17292 +            P_totalsal  =     65295.6666666666;
17293 +            V_totalsal  =     65467.7567567567;
17294 +            END;
17295 +          END;
17296 +        ELSE DO;
17297 +          IF  NOT MISSING(nonstsal ) AND
17298 +            nonstsal  <                70853 THEN DO;
17299 +            _NODE_  =                  114;
17300 +            _LEAF_  =                   42;
17301 +            P_totalsal  =     70004.1267605633;
17302 +            V_totalsal  =     69839.4864864864;
17303 +            END;
17304 +          ELSE DO;
17305 +            _NODE_  =                  115;
17306 +            _LEAF_  =                   43;
17307 +            P_totalsal  =     72698.8068181818;
17308 +            V_totalsal  =     72584.0769230769;
17309 +            END;
17310 +          END;
17311 +        END;
17312 +      END;
17313 +    ELSE IF  NOT MISSING(nonstsal ) AND
17314 +                     74256 <= nonstsal  THEN DO;
17315 +      IF  NOT MISSING(nonstsal ) AND
17316 +                     81491.5 <= nonstsal  AND
17317 +        nonstsal  <              86766.5 THEN DO;
17318 +        _NODE_  =                   40;
17319 +        _LEAF_  =                   46;
17320 +        P_totalsal  =                85762;
17321 +        V_totalsal  =     85909.1818181818;
17322 +        END;
17323 +      ELSE IF  NOT MISSING(nonstsal ) AND
17324 +                     86766.5 <= nonstsal  THEN DO;
17325 +        _NODE_  =                   41;
17326 +        _LEAF_  =                   47;
17327 +        P_totalsal  =     94602.0574712643;
17328 +        V_totalsal  =     94566.3731343283;
17329 +        END;
17330 +      ELSE DO;
17331 +        _NODE_  =                   39;
17332 +        _LEAF_  =                   45;
17333 +        P_totalsal  =     80472.2113402061;
17334 +        V_totalsal  =      81919.048192771;
17335 +        END;
17336 +      END;
17337 +    ELSE DO;
17338 +      IF  NOT MISSING(statesal ) AND
17339 +                       538.5 <= statesal  AND
17340 +        statesal  <                30580 THEN DO;
17341 +        IF  NOT MISSING(nonstsal ) AND
17342 +                         13022 <= nonstsal  THEN DO;
17343 +          IF  NOT MISSING(statesal ) AND
17344 +                         20121.5 <= statesal  THEN DO;
17345 +            _NODE_  =                   98;
17346 +            _LEAF_  =                   18;
17347 +            P_totalsal  =     50866.2777777777;
17348 +            V_totalsal  =     52344.2777777777;
17349 +            END;
17350 +          ELSE DO;
17351 +            _NODE_  =                   97;
17352 +            _LEAF_  =                   17;
17353 +            P_totalsal  =     41342.3174603174;
17354 +            V_totalsal  =     41047.4666666666;
17355 +            END;
17356 +          END;
17357 +        ELSE DO;
17358 +          IF  NOT MISSING(statesal ) AND
17359 +            statesal  <              18782.5 THEN DO;
17360 +            _NODE_  =                   94;
17361 +            _LEAF_  =                   14;
17362 +            P_totalsal  =      12629.343283582;
17363 +            V_totalsal  =     12658.5348837209;
17364 +            END;
17365 +          ELSE IF  NOT MISSING(statesal ) AND
17366 +                         26357.5 <= statesal  THEN DO;
17367 +            _NODE_  =                   96;
17368 +            _LEAF_  =                   16;
17369 +            P_totalsal  =     28817.1833333333;
17370 +            V_totalsal  =     28912.4565217391;
17371 +            END;
17372 +          ELSE DO;
17373 +            _NODE_  =                   95;
17374 +            _LEAF_  =                   15;
17375 +            P_totalsal  =     25853.3032258064;
17376 +            V_totalsal  =     25965.6129032258;
17377 +            END;
17378 +          END;
17379 +        END;
17380 +      ELSE IF  NOT MISSING(statesal ) AND
17381 +                       30580 <= statesal  AND
17382 +        statesal  <                47333 THEN DO;
17383 +        IF  NOT MISSING(nonstsal ) AND
17384 +                          4981 <= nonstsal  AND
17385 +          nonstsal  <              16450.5 THEN DO;
17386 +          _NODE_  =                   55;
17387 +          _LEAF_  =                   23;
17388 +          P_totalsal  =     48611.9259259259;
17389 +          V_totalsal  =     48270.3846153846;
17390 +          END;
17391 +        ELSE IF  NOT MISSING(nonstsal ) AND
17392 +                       16450.5 <= nonstsal  THEN DO;
17393 +          _NODE_  =                   56;
17394 +          _LEAF_  =                   24;
17395 +          P_totalsal  =     67858.2181818181;
17396 +          V_totalsal  =     64259.0526315789;
17397 +          END;
17398 +        ELSE DO;
17399 +          IF  NOT MISSING(statesal ) AND
17400 +            statesal  <                35530 THEN DO;
17401 +            _NODE_  =                   99;
17402 +            _LEAF_  =                   19;
17403 +            P_totalsal  =      33626.054054054;
17404 +            V_totalsal  =     33857.8913043478;
17405 +            END;
17406 +          ELSE IF  NOT MISSING(statesal ) AND
17407 +                           35530 <= statesal  AND
17408 +            statesal  <                39394 THEN DO;
17409 +            _NODE_  =                  100;
17410 +            _LEAF_  =                   20;
17411 +            P_totalsal  =     37523.1486486486;
17412 +            V_totalsal  =     38060.2537313432;
17413 +            END;
17414 +          ELSE IF  NOT MISSING(statesal ) AND
17415 +                         43607.5 <= statesal  THEN DO;
17416 +            _NODE_  =                  102;
17417 +            _LEAF_  =                   22;
17418 +            P_totalsal  =     45252.0802469135;
17419 +            V_totalsal  =     45568.5694444444;
17420 +            END;
17421 +          ELSE DO;
17422 +            _NODE_  =                  101;
17423 +            _LEAF_  =                   21;
17424 +            P_totalsal  =     41803.8781725888;
17425 +            V_totalsal  =     41783.8023255814;
17426 +            END;
17427 +          END;
17428 +        END;
17429 +      ELSE IF  NOT MISSING(statesal ) AND
17430 +                       47333 <= statesal  THEN DO;
17431 +        IF  NOT MISSING(nonstsal ) AND
17432 +                          2075 <= nonstsal  THEN DO;
17433 +          _NODE_  =                   58;
17434 +          _LEAF_  =                   28;
17435 +          P_totalsal  =     67737.4387755102;
17436 +          V_totalsal  =     68617.4117647059;
17437 +          END;
17438 +        ELSE DO;
17439 +          IF  NOT MISSING(statesal ) AND
17440 +                         51179.5 <= statesal  AND
17441 +            statesal  <              56763.5 THEN DO;
17442 +            _NODE_  =                  104;
17443 +            _LEAF_  =                   26;
17444 +            P_totalsal  =              53924.5;
17445 +            V_totalsal  =     54091.4716981132;
17446 +            END;
17447 +          ELSE IF  NOT MISSING(statesal ) AND
17448 +                         56763.5 <= statesal  THEN DO;
17449 +            _NODE_  =                  105;
17450 +            _LEAF_  =                   27;
17451 +            P_totalsal  =     58596.2873563218;
17452 +            V_totalsal  =      58636.081081081;
17453 +            END;
17454 +          ELSE DO;
17455 +            _NODE_  =                  103;
17456 +            _LEAF_  =                   25;
17457 +            P_totalsal  =     49365.8629032258;
17458 +            V_totalsal  =      49164.224137931;
17459 +            END;
17460 +          END;
17461 +        END;
17462 +      ELSE DO;
17463 +        IF  NOT MISSING(nonstsal ) AND
17464 +          nonstsal  <              29011.5 THEN DO;
17465 +          IF  NOT MISSING(nonstsal ) AND
17466 +                           26315 <= nonstsal  THEN DO;
17467 +            _NODE_  =                   82;
17468 +            _LEAF_  =                    2;
17469 +            P_totalsal  =              27963.5;
17470 +            V_totalsal  =     28144.3809523809;
17471 +            END;
17472 +          ELSE DO;
17473 +            _NODE_  =                   81;
17474 +            _LEAF_  =                    1;
17475 +            P_totalsal  =     23373.5820895522;
17476 +            V_totalsal  =             24206.88;
17477 +            END;
17478 +          END;
17479 +        ELSE IF  NOT MISSING(nonstsal ) AND
17480 +                       29011.5 <= nonstsal  AND
17481 +          nonstsal  <              34677.5 THEN DO;
17482 +          IF  NOT MISSING(nonstsal ) AND
17483 +                           31786 <= nonstsal  AND
17484 +            nonstsal  <              32741.5 THEN DO;
17485 +            _NODE_  =                   84;
17486 +            _LEAF_  =                    4;
17487 +            P_totalsal  =     32334.2264150943;
17488 +            V_totalsal  =     32513.3333333333;
17489 +            END;
17490 +          ELSE IF  NOT MISSING(nonstsal ) AND
17491 +                         32741.5 <= nonstsal  AND
17492 +            nonstsal  <              33718.5 THEN DO;
17493 +            _NODE_  =                   85;
17494 +            _LEAF_  =                    5;
17495 +            P_totalsal  =             33243.24;
17496 +            V_totalsal  =     33195.8695652173;
17497 +            END;
17498 +          ELSE IF  NOT MISSING(nonstsal ) AND
17499 +                         33718.5 <= nonstsal  THEN DO;
17500 +            _NODE_  =                   86;
17501 +            _LEAF_  =                    6;
17502 +            P_totalsal  =     34083.4098360655;
17503 +            V_totalsal  =              34068.5;
17504 +            END;
17505 +          ELSE DO;
17506 +            _NODE_  =                   83;
17507 +            _LEAF_  =                    3;
17508 +            P_totalsal  =     30450.7586206896;
17509 +            V_totalsal  =     30453.0961538461;
17510 +            END;
17511 +          END;
17512 +        ELSE IF  NOT MISSING(nonstsal ) AND
17513 +                       34677.5 <= nonstsal  AND
17514 +          nonstsal  <              39454.5 THEN DO;
17515 +          IF  NOT MISSING(nonstsal ) AND
17516 +            nonstsal  <              36040.5 THEN DO;
17517 +            _NODE_  =                   87;
17518 +            _LEAF_  =                    7;
17519 +            P_totalsal  =     35447.7261904761;
17520 +            V_totalsal  =     35448.6764705882;
17521 +            END;
17522 +          ELSE IF  NOT MISSING(nonstsal ) AND
17523 +                           37165 <= nonstsal  AND
17524 +            nonstsal  <              38012.5 THEN DO;
17525 +            _NODE_  =                   89;
17526 +            _LEAF_  =                    9;
17527 +            P_totalsal  =      37626.074074074;
17528 +            V_totalsal  =              37719.2;
17529 +            END;
17530 +          ELSE IF  NOT MISSING(nonstsal ) AND
17531 +                         38012.5 <= nonstsal  THEN DO;
17532 +            _NODE_  =                   90;
17533 +            _LEAF_  =                   10;
17534 +            P_totalsal  =      38803.676056338;
17535 +            V_totalsal  =            38724.225;
17536 +            END;
17537 +          ELSE DO;
17538 +            _NODE_  =                   88;
17539 +            _LEAF_  =                    8;
17540 +            P_totalsal  =     36547.0388349514;
17541 +            V_totalsal  =          36588.59375;
17542 +            END;
17543 +          END;
17544 +        ELSE DO;
17545 +          IF  NOT MISSING(nonstsal ) AND
17546 +            nonstsal  <                40735 THEN DO;
17547 +            _NODE_  =                   91;
17548 +            _LEAF_  =                   11;
17549 +            P_totalsal  =     40126.2604166666;
17550 +            V_totalsal  =     40086.8163265306;
17551 +            END;
17552 +          ELSE IF  NOT MISSING(nonstsal ) AND
17553 +                           42604 <= nonstsal  THEN DO;
17554 +            _NODE_  =                   93;
17555 +            _LEAF_  =                   13;
17556 +            P_totalsal  =     43390.2297297297;
17557 +            V_totalsal  =              43219.5;
17558 +            END;
17559 +          ELSE DO;
17560 +            _NODE_  =                   92;
17561 +            _LEAF_  =                   12;
17562 +            P_totalsal  =     41634.7027027027;
17563 +            V_totalsal  =     41675.6777777777;
17564 +            END;
17565 +          END;
17566 +        END;
17567 +      END;
17568 +    END;
17569 +  END;
17570 +
17571 +*****  RESIDUALS R_ *************;
17572 +IF MISSING( totalsal ) THEN R_totalsal  = .;
17573 +ELSE R_totalsal  = totalsal  - P_totalsal ;
17574 +
17575 +****************************************************************;
17576 +******          END OF DECISION TREE SCORING CODE         ******;
17577 +****************************************************************;
17578 +
17579 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
17580  run;

NOTE: DATA STEP view saved on file EMWS1.TREE4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

17581  quit;
17582  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

17583  filename emflow "C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\EMFLOWSCORE.sas";
17584  *------------------------------------------------------------*;
17585  * Tree4: Scoring VALIDATE data;
17586  *------------------------------------------------------------*;
17587  data EMWS1.Tree4_VALIDATE
17588  / view=EMWS1.Tree4_VALIDATE
17589  ;
17590  set EMWS1.Part_VALIDATE
17591  ;
17592  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\EMFLOWSCORE.sas.
17593 +****************************************************************;
17594 +******             DECISION TREE SCORING CODE             ******;
17595 +****************************************************************;
17596 +
17597 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
17598 +LENGTH _WARN_  $    4;
17599 +
17600 +******              LABELS FOR NEW VARIABLES              ******;
17601 +label _NODE_ = 'Node' ;
17602 +label _LEAF_ = 'Leaf' ;
17603 +label P_totalsal = 'Predicted: totalsal' ;
17604 +label V_totalsal = 'Validated: totalsal' ;
17605 +label R_totalsal = 'Residual: totalsal' ;
17606 +label _WARN_ = 'Warnings' ;
17607 +
17608 +
17609 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
17610 +LENGTH _ARBFMT_30 $     30; DROP _ARBFMT_30;
17611 +_ARBFMT_30 = ' '; /* Initialize to avoid warning. */
17612 +LENGTH _ARBFMT_28 $     28; DROP _ARBFMT_28;
17613 +_ARBFMT_28 = ' '; /* Initialize to avoid warning. */
17614 +
17615 +
17616 +******             ASSIGN OBSERVATION TO NODE             ******;
17617 +IF  NOT MISSING(nonstsal ) AND
17618 +               95900.5 <= nonstsal  AND
17619 +  nonstsal  <             180312.5 THEN DO;
17620 +  IF  NOT MISSING(statesal ) AND
17621 +                    2599 <= statesal  AND
17622 +    statesal  <              15464.5 THEN DO;
17623 +    _NODE_  =                   11;
17624 +    _LEAF_  =                   69;
17625 +    P_totalsal  =     145295.301886792;
17626 +    V_totalsal  =     138556.863636363;
17627 +    END;
17628 +  ELSE IF  NOT MISSING(statesal ) AND
17629 +                 15464.5 <= statesal  AND
17630 +    statesal  <                48253 THEN DO;
17631 +    _NODE_  =                   12;
17632 +    _LEAF_  =                   70;
17633 +    P_totalsal  =     166528.224137931;
17634 +    V_totalsal  =     155472.709677419;
17635 +    END;
17636 +  ELSE IF  NOT MISSING(statesal ) AND
17637 +                   48253 <= statesal  THEN DO;
17638 +    _NODE_  =                   13;
17639 +    _LEAF_  =                   71;
17640 +    P_totalsal  =            233685.12;
17641 +    V_totalsal  =      231484.59090909;
17642 +    END;
17643 +  ELSE DO;
17644 +    IF  NOT MISSING(nonstsal ) AND
17645 +                    109950 <= nonstsal  AND
17646 +      nonstsal  <             120749.5 THEN DO;
17647 +      _NODE_  =                   27;
17648 +      _LEAF_  =                   66;
17649 +      P_totalsal  =     114770.807692307;
17650 +      V_totalsal  =            115916.45;
17651 +      END;
17652 +    ELSE IF  NOT MISSING(nonstsal ) AND
17653 +                  120749.5 <= nonstsal  AND
17654 +      nonstsal  <             149359.5 THEN DO;
17655 +      _NODE_  =                   28;
17656 +      _LEAF_  =                   67;
17657 +      P_totalsal  =     134294.632653061;
17658 +      V_totalsal  =     135776.804878048;
17659 +      END;
17660 +    ELSE IF  NOT MISSING(nonstsal ) AND
17661 +                  149359.5 <= nonstsal  THEN DO;
17662 +      _NODE_  =                   29;
17663 +      _LEAF_  =                   68;
17664 +      P_totalsal  =     165185.515151515;
17665 +      V_totalsal  =     166636.777777777;
17666 +      END;
17667 +    ELSE DO;
17668 +      _NODE_  =                   26;
17669 +      _LEAF_  =                   65;
17670 +      P_totalsal  =     101778.095238095;
17671 +      V_totalsal  =     102117.243902439;
17672 +      END;
17673 +    END;
17674 +  END;
17675 +ELSE IF  NOT MISSING(nonstsal ) AND
17676 +              180312.5 <= nonstsal  AND
17677 +  nonstsal  <             290367.5 THEN DO;
17678 +  IF  NOT MISSING(nonstsal ) AND
17679 +    nonstsal  <             209437.5 THEN DO;
17680 +    _NODE_  =                   14;
17681 +    _LEAF_  =                   72;
17682 +    P_totalsal  =     205333.694117647;
17683 +    V_totalsal  =     204150.071428571;
17684 +    END;
17685 +  ELSE IF  NOT MISSING(nonstsal ) AND
17686 +                209437.5 <= nonstsal  AND
17687 +    nonstsal  <               235147 THEN DO;
17688 +    _NODE_  =                   15;
17689 +    _LEAF_  =                   73;
17690 +    P_totalsal  =     234605.621212121;
17691 +    V_totalsal  =     241105.225806451;
17692 +    END;
17693 +  ELSE DO;
17694 +    _NODE_  =                   16;
17695 +    _LEAF_  =                   74;
17696 +    P_totalsal  =     273957.193877551;
17697 +    V_totalsal  =     271501.285714285;
17698 +    END;
17699 +  END;
17700 +ELSE IF  NOT MISSING(nonstsal ) AND
17701 +              290367.5 <= nonstsal  THEN DO;
17702 +  _NODE_  =                    5;
17703 +  _LEAF_  =                   75;
17704 +  P_totalsal  =     389678.802631579;
17705 +  V_totalsal  =     377767.533333333;
17706 +  END;
17707 +ELSE DO;
17708 +  IF  NOT MISSING(statesal ) AND
17709 +                 60301.5 <= statesal  AND
17710 +    statesal  <               108099 THEN DO;
17711 +    IF  NOT MISSING(nonstsal ) AND
17712 +                    9900.5 <= nonstsal  AND
17713 +      nonstsal  <              34813.5 THEN DO;
17714 +      _NODE_  =                   22;
17715 +      _LEAF_  =                   58;
17716 +      P_totalsal  =     103556.683673469;
17717 +      V_totalsal  =     104522.135135135;
17718 +      END;
17719 +    ELSE IF  NOT MISSING(nonstsal ) AND
17720 +                   34813.5 <= nonstsal  THEN DO;
17721 +      _NODE_  =                   23;
17722 +      _LEAF_  =                   59;
17723 +      P_totalsal  =     141148.098901098;
17724 +      V_totalsal  =             136074.7;
17725 +      END;
17726 +    ELSE DO;
17727 +      IF  NOT MISSING(statesal ) AND
17728 +                       71097 <= statesal  AND
17729 +        statesal  <              81763.5 THEN DO;
17730 +        IF  NOT MISSING(statesal ) AND
17731 +          statesal  <                74875 THEN DO;
17732 +          _NODE_  =                   72;
17733 +          _LEAF_  =                   51;
17734 +          P_totalsal  =     73448.6666666666;
17735 +          V_totalsal  =     73306.9090909091;
17736 +          END;
17737 +        ELSE IF  NOT MISSING(statesal ) AND
17738 +                         74875 <= statesal  AND
17739 +          statesal  <                76825 THEN DO;
17740 +          _NODE_  =                   73;
17741 +          _LEAF_  =                   52;
17742 +          P_totalsal  =     75918.0727272727;
17743 +          V_totalsal  =     76591.7058823529;
17744 +          END;
17745 +        ELSE DO;
17746 +          _NODE_  =                   74;
17747 +          _LEAF_  =                   53;
17748 +          P_totalsal  =     79991.7974683544;
17749 +          V_totalsal  =     79243.1842105263;
17750 +          END;
17751 +        END;
17752 +      ELSE IF  NOT MISSING(statesal ) AND
17753 +                     81763.5 <= statesal  AND
17754 +        statesal  <                92774 THEN DO;
17755 +        IF  NOT MISSING(statesal ) AND
17756 +          statesal  <                84994 THEN DO;
17757 +          _NODE_  =                   75;
17758 +          _LEAF_  =                   54;
17759 +          P_totalsal  =     84096.6315789473;
17760 +          V_totalsal  =             84898.44;
17761 +          END;
17762 +        ELSE DO;
17763 +          _NODE_  =                   76;
17764 +          _LEAF_  =                   55;
17765 +          P_totalsal  =     90010.5222222222;
17766 +          V_totalsal  =     89579.7142857143;
17767 +          END;
17768 +        END;
17769 +      ELSE IF  NOT MISSING(statesal ) AND
17770 +                       92774 <= statesal  THEN DO;
17771 +        IF  NOT MISSING(statesal ) AND
17772 +                        100867 <= statesal  THEN DO;
17773 +          _NODE_  =                   78;
17774 +          _LEAF_  =                   57;
17775 +          P_totalsal  =             105425.5;
17776 +          V_totalsal  =     105827.566666666;
17777 +          END;
17778 +        ELSE DO;
17779 +          _NODE_  =                   77;
17780 +          _LEAF_  =                   56;
17781 +          P_totalsal  =     97038.7866666666;
17782 +          V_totalsal  =                97273;
17783 +          END;
17784 +        END;
17785 +      ELSE DO;
17786 +        IF  NOT MISSING(statesal ) AND
17787 +          statesal  <              63410.5 THEN DO;
17788 +          _NODE_  =                   69;
17789 +          _LEAF_  =                   48;
17790 +          P_totalsal  =     62533.6964285714;
17791 +          V_totalsal  =     63382.3870967742;
17792 +          END;
17793 +        ELSE IF  NOT MISSING(statesal ) AND
17794 +                       63410.5 <= statesal  AND
17795 +          statesal  <              66247.5 THEN DO;
17796 +          _NODE_  =                   70;
17797 +          _LEAF_  =                   49;
17798 +          P_totalsal  =     65306.0196078431;
17799 +          V_totalsal  =     64981.0689655172;
17800 +          END;
17801 +        ELSE DO;
17802 +          _NODE_  =                   71;
17803 +          _LEAF_  =                   50;
17804 +          P_totalsal  =     69608.8775510204;
17805 +          V_totalsal  =     70048.5675675675;
17806 +          END;
17807 +        END;
17808 +      END;
17809 +    END;
17810 +  ELSE IF  NOT MISSING(statesal ) AND
17811 +                  108099 <= statesal  AND
17812 +    statesal  <               162093 THEN DO;
17813 +    IF  NOT MISSING(nonstsal ) AND
17814 +                   22783.5 <= nonstsal  THEN DO;
17815 +      _NODE_  =                   25;
17816 +      _LEAF_  =                   63;
17817 +      P_totalsal  =             172191.4;
17818 +      V_totalsal  =     175374.619047619;
17819 +      END;
17820 +    ELSE DO;
17821 +      IF  NOT MISSING(statesal ) AND
17822 +                    130026.5 <= statesal  THEN DO;
17823 +        _NODE_  =                   47;
17824 +        _LEAF_  =                   62;
17825 +        P_totalsal  =     147090.839080459;
17826 +        V_totalsal  =          147979.8125;
17827 +        END;
17828 +      ELSE DO;
17829 +        IF  NOT MISSING(statesal ) AND
17830 +                      117576.5 <= statesal  THEN DO;
17831 +          _NODE_  =                   80;
17832 +          _LEAF_  =                   61;
17833 +          P_totalsal  =     128431.728813559;
17834 +          V_totalsal  =     126284.958333333;
17835 +          END;
17836 +        ELSE DO;
17837 +          _NODE_  =                   79;
17838 +          _LEAF_  =                   60;
17839 +          P_totalsal  =          116553.6625;
17840 +          V_totalsal  =     115684.620689655;
17841 +          END;
17842 +        END;
17843 +      END;
17844 +    END;
17845 +  ELSE IF  NOT MISSING(statesal ) AND
17846 +                  162093 <= statesal  THEN DO;
17847 +    _NODE_  =                    9;
17848 +    _LEAF_  =                   64;
17849 +    P_totalsal  =     224578.765306122;
17850 +    V_totalsal  =     236071.901960784;
17851 +    END;
17852 +  ELSE DO;
17853 +    IF  NOT MISSING(nonstsal ) AND
17854 +                   43903.5 <= nonstsal  AND
17855 +      nonstsal  <              57561.5 THEN DO;
17856 +      IF  NOT MISSING(nonstsal ) AND
17857 +        nonstsal  <              47236.5 THEN DO;
17858 +        _ARBFMT_30 = PUT( exempt2 , $30.);
17859 +         %DMNORMIP( _ARBFMT_30);
17860 +        IF _ARBFMT_30 IN ('EXEMPT' ) THEN DO;
17861 +          _NODE_  =                   60;
17862 +          _LEAF_  =                   30;
17863 +          P_totalsal  =     54232.3275862069;
17864 +          V_totalsal  =     55741.5263157894;
17865 +          END;
17866 +        ELSE DO;
17867 +          _NODE_  =                   59;
17868 +          _LEAF_  =                   29;
17869 +          P_totalsal  =     45695.6432160804;
17870 +          V_totalsal  =     47597.4642857142;
17871 +          END;
17872 +        END;
17873 +      ELSE IF  NOT MISSING(nonstsal ) AND
17874 +                       52023 <= nonstsal  THEN DO;
17875 +        _NODE_  =                   36;
17876 +        _LEAF_  =                   35;
17877 +        P_totalsal  =     56000.9809160305;
17878 +        V_totalsal  =     56889.7950819672;
17879 +        END;
17880 +      ELSE DO;
17881 +        _ARBFMT_28 = PUT( position , $28.);
17882 +         %DMNORMIP( _ARBFMT_28);
17883 +        IF _ARBFMT_28 IN ('OTHER' ) THEN DO;
17884 +          _NODE_  =                   61;
17885 +          _LEAF_  =                   31;
17886 +          P_totalsal  =     50091.2717391304;
17887 +          V_totalsal  =     50038.6444444444;
17888 +          END;
17889 +        ELSE IF _ARBFMT_28 IN ('ADMIN' ,'ASSISTANT OTHER' ,'BUILDING' ,
17890 +          'CLINICAL OTHER' ,'CLINICAL RESEARCH' ) THEN DO;
17891 +          _NODE_  =                   62;
17892 +          _LEAF_  =                   32;
17893 +          P_totalsal  =     49622.3728813559;
17894 +          V_totalsal  =     49552.6071428571;
17895 +          END;
17896 +        ELSE IF _ARBFMT_28 IN ('EXECUTIVE' ,'RESEARCH OTHER' ,
17897 +        'OTHER PROGRAM' ,'PROJECT MANAGER' ,'RESEARCH ASSOCIATE' ,
17898 +          'RESEARCH SPECIALIST' ,'RESEARCH TECHNICIAN' ) THEN DO;
17899 +          _NODE_  =                   64;
17900 +          _LEAF_  =                   34;
17901 +          P_totalsal  =          50058.90625;
17902 +          V_totalsal  =                49517;
17903 +          END;
17904 +        ELSE DO;
17905 +          _NODE_  =                   63;
17906 +          _LEAF_  =                   33;
17907 +          P_totalsal  =     57550.0181818181;
17908 +          V_totalsal  =     56288.8518518518;
17909 +          END;
17910 +        END;
17911 +      END;
17912 +    ELSE IF  NOT MISSING(nonstsal ) AND
17913 +                   57561.5 <= nonstsal  AND
17914 +      nonstsal  <                74256 THEN DO;
17915 +      IF  NOT MISSING(statesal ) AND
17916 +                        8802 <= statesal  THEN DO;
17917 +        _NODE_  =                   38;
17918 +        _LEAF_  =                   44;
17919 +        P_totalsal  =              94400.2;
17920 +        V_totalsal  =     98545.4285714285;
17921 +        END;
17922 +      ELSE DO;
17923 +        IF  NOT MISSING(nonstsal ) AND
17924 +          nonstsal  <              60502.5 THEN DO;
17925 +          IF  NOT MISSING(nonstsal ) AND
17926 +            nonstsal  <              59070.5 THEN DO;
17927 +            _NODE_  =                  108;
17928 +            _LEAF_  =                   36;
17929 +            P_totalsal  =             58257.96;
17930 +            V_totalsal  =              58209.6;
17931 +            END;
17932 +          ELSE DO;
17933 +            _NODE_  =                  109;
17934 +            _LEAF_  =                   37;
17935 +            P_totalsal  =     59803.3114754098;
17936 +            V_totalsal  =     59782.6296296296;
17937 +            END;
17938 +          END;
17939 +        ELSE IF  NOT MISSING(nonstsal ) AND
17940 +                       60502.5 <= nonstsal  AND
17941 +          nonstsal  <              64148.5 THEN DO;
17942 +          IF  NOT MISSING(nonstsal ) AND
17943 +                           62434 <= nonstsal  THEN DO;
17944 +            _NODE_  =                  111;
17945 +            _LEAF_  =                   39;
17946 +            P_totalsal  =     63386.0882352941;
17947 +            V_totalsal  =             63171.84;
17948 +            END;
17949 +          ELSE DO;
17950 +            _NODE_  =                  110;
17951 +            _LEAF_  =                   38;
17952 +            P_totalsal  =     61480.6913580247;
17953 +            V_totalsal  =     61572.9210526315;
17954 +            END;
17955 +          END;
17956 +        ELSE IF  NOT MISSING(nonstsal ) AND
17957 +                       64148.5 <= nonstsal  AND
17958 +          nonstsal  <                68310 THEN DO;
17959 +          IF  NOT MISSING(nonstsal ) AND
17960 +                         66244.5 <= nonstsal  THEN DO;
17961 +            _NODE_  =                  113;
17962 +            _LEAF_  =                   41;
17963 +            P_totalsal  =     67381.0434782608;
17964 +            V_totalsal  =             67396.05;
17965 +            END;
17966 +          ELSE DO;
17967 +            _NODE_  =                  112;
17968 +            _LEAF_  =                   40;
17969 +            P_totalsal  =     65295.6666666666;
17970 +            V_totalsal  =     65467.7567567567;
17971 +            END;
17972 +          END;
17973 +        ELSE DO;
17974 +          IF  NOT MISSING(nonstsal ) AND
17975 +            nonstsal  <                70853 THEN DO;
17976 +            _NODE_  =                  114;
17977 +            _LEAF_  =                   42;
17978 +            P_totalsal  =     70004.1267605633;
17979 +            V_totalsal  =     69839.4864864864;
17980 +            END;
17981 +          ELSE DO;
17982 +            _NODE_  =                  115;
17983 +            _LEAF_  =                   43;
17984 +            P_totalsal  =     72698.8068181818;
17985 +            V_totalsal  =     72584.0769230769;
17986 +            END;
17987 +          END;
17988 +        END;
17989 +      END;
17990 +    ELSE IF  NOT MISSING(nonstsal ) AND
17991 +                     74256 <= nonstsal  THEN DO;
17992 +      IF  NOT MISSING(nonstsal ) AND
17993 +                     81491.5 <= nonstsal  AND
17994 +        nonstsal  <              86766.5 THEN DO;
17995 +        _NODE_  =                   40;
17996 +        _LEAF_  =                   46;
17997 +        P_totalsal  =                85762;
17998 +        V_totalsal  =     85909.1818181818;
17999 +        END;
18000 +      ELSE IF  NOT MISSING(nonstsal ) AND
18001 +                     86766.5 <= nonstsal  THEN DO;
18002 +        _NODE_  =                   41;
18003 +        _LEAF_  =                   47;
18004 +        P_totalsal  =     94602.0574712643;
18005 +        V_totalsal  =     94566.3731343283;
18006 +        END;
18007 +      ELSE DO;
18008 +        _NODE_  =                   39;
18009 +        _LEAF_  =                   45;
18010 +        P_totalsal  =     80472.2113402061;
18011 +        V_totalsal  =      81919.048192771;
18012 +        END;
18013 +      END;
18014 +    ELSE DO;
18015 +      IF  NOT MISSING(statesal ) AND
18016 +                       538.5 <= statesal  AND
18017 +        statesal  <                30580 THEN DO;
18018 +        IF  NOT MISSING(nonstsal ) AND
18019 +                         13022 <= nonstsal  THEN DO;
18020 +          IF  NOT MISSING(statesal ) AND
18021 +                         20121.5 <= statesal  THEN DO;
18022 +            _NODE_  =                   98;
18023 +            _LEAF_  =                   18;
18024 +            P_totalsal  =     50866.2777777777;
18025 +            V_totalsal  =     52344.2777777777;
18026 +            END;
18027 +          ELSE DO;
18028 +            _NODE_  =                   97;
18029 +            _LEAF_  =                   17;
18030 +            P_totalsal  =     41342.3174603174;
18031 +            V_totalsal  =     41047.4666666666;
18032 +            END;
18033 +          END;
18034 +        ELSE DO;
18035 +          IF  NOT MISSING(statesal ) AND
18036 +            statesal  <              18782.5 THEN DO;
18037 +            _NODE_  =                   94;
18038 +            _LEAF_  =                   14;
18039 +            P_totalsal  =      12629.343283582;
18040 +            V_totalsal  =     12658.5348837209;
18041 +            END;
18042 +          ELSE IF  NOT MISSING(statesal ) AND
18043 +                         26357.5 <= statesal  THEN DO;
18044 +            _NODE_  =                   96;
18045 +            _LEAF_  =                   16;
18046 +            P_totalsal  =     28817.1833333333;
18047 +            V_totalsal  =     28912.4565217391;
18048 +            END;
18049 +          ELSE DO;
18050 +            _NODE_  =                   95;
18051 +            _LEAF_  =                   15;
18052 +            P_totalsal  =     25853.3032258064;
18053 +            V_totalsal  =     25965.6129032258;
18054 +            END;
18055 +          END;
18056 +        END;
18057 +      ELSE IF  NOT MISSING(statesal ) AND
18058 +                       30580 <= statesal  AND
18059 +        statesal  <                47333 THEN DO;
18060 +        IF  NOT MISSING(nonstsal ) AND
18061 +                          4981 <= nonstsal  AND
18062 +          nonstsal  <              16450.5 THEN DO;
18063 +          _NODE_  =                   55;
18064 +          _LEAF_  =                   23;
18065 +          P_totalsal  =     48611.9259259259;
18066 +          V_totalsal  =     48270.3846153846;
18067 +          END;
18068 +        ELSE IF  NOT MISSING(nonstsal ) AND
18069 +                       16450.5 <= nonstsal  THEN DO;
18070 +          _NODE_  =                   56;
18071 +          _LEAF_  =                   24;
18072 +          P_totalsal  =     67858.2181818181;
18073 +          V_totalsal  =     64259.0526315789;
18074 +          END;
18075 +        ELSE DO;
18076 +          IF  NOT MISSING(statesal ) AND
18077 +            statesal  <                35530 THEN DO;
18078 +            _NODE_  =                   99;
18079 +            _LEAF_  =                   19;
18080 +            P_totalsal  =      33626.054054054;
18081 +            V_totalsal  =     33857.8913043478;
18082 +            END;
18083 +          ELSE IF  NOT MISSING(statesal ) AND
18084 +                           35530 <= statesal  AND
18085 +            statesal  <                39394 THEN DO;
18086 +            _NODE_  =                  100;
18087 +            _LEAF_  =                   20;
18088 +            P_totalsal  =     37523.1486486486;
18089 +            V_totalsal  =     38060.2537313432;
18090 +            END;
18091 +          ELSE IF  NOT MISSING(statesal ) AND
18092 +                         43607.5 <= statesal  THEN DO;
18093 +            _NODE_  =                  102;
18094 +            _LEAF_  =                   22;
18095 +            P_totalsal  =     45252.0802469135;
18096 +            V_totalsal  =     45568.5694444444;
18097 +            END;
18098 +          ELSE DO;
18099 +            _NODE_  =                  101;
18100 +            _LEAF_  =                   21;
18101 +            P_totalsal  =     41803.8781725888;
18102 +            V_totalsal  =     41783.8023255814;
18103 +            END;
18104 +          END;
18105 +        END;
18106 +      ELSE IF  NOT MISSING(statesal ) AND
18107 +                       47333 <= statesal  THEN DO;
18108 +        IF  NOT MISSING(nonstsal ) AND
18109 +                          2075 <= nonstsal  THEN DO;
18110 +          _NODE_  =                   58;
18111 +          _LEAF_  =                   28;
18112 +          P_totalsal  =     67737.4387755102;
18113 +          V_totalsal  =     68617.4117647059;
18114 +          END;
18115 +        ELSE DO;
18116 +          IF  NOT MISSING(statesal ) AND
18117 +                         51179.5 <= statesal  AND
18118 +            statesal  <              56763.5 THEN DO;
18119 +            _NODE_  =                  104;
18120 +            _LEAF_  =                   26;
18121 +            P_totalsal  =              53924.5;
18122 +            V_totalsal  =     54091.4716981132;
18123 +            END;
18124 +          ELSE IF  NOT MISSING(statesal ) AND
18125 +                         56763.5 <= statesal  THEN DO;
18126 +            _NODE_  =                  105;
18127 +            _LEAF_  =                   27;
18128 +            P_totalsal  =     58596.2873563218;
18129 +            V_totalsal  =      58636.081081081;
18130 +            END;
18131 +          ELSE DO;
18132 +            _NODE_  =                  103;
18133 +            _LEAF_  =                   25;
18134 +            P_totalsal  =     49365.8629032258;
18135 +            V_totalsal  =      49164.224137931;
18136 +            END;
18137 +          END;
18138 +        END;
18139 +      ELSE DO;
18140 +        IF  NOT MISSING(nonstsal ) AND
18141 +          nonstsal  <              29011.5 THEN DO;
18142 +          IF  NOT MISSING(nonstsal ) AND
18143 +                           26315 <= nonstsal  THEN DO;
18144 +            _NODE_  =                   82;
18145 +            _LEAF_  =                    2;
18146 +            P_totalsal  =              27963.5;
18147 +            V_totalsal  =     28144.3809523809;
18148 +            END;
18149 +          ELSE DO;
18150 +            _NODE_  =                   81;
18151 +            _LEAF_  =                    1;
18152 +            P_totalsal  =     23373.5820895522;
18153 +            V_totalsal  =             24206.88;
18154 +            END;
18155 +          END;
18156 +        ELSE IF  NOT MISSING(nonstsal ) AND
18157 +                       29011.5 <= nonstsal  AND
18158 +          nonstsal  <              34677.5 THEN DO;
18159 +          IF  NOT MISSING(nonstsal ) AND
18160 +                           31786 <= nonstsal  AND
18161 +            nonstsal  <              32741.5 THEN DO;
18162 +            _NODE_  =                   84;
18163 +            _LEAF_  =                    4;
18164 +            P_totalsal  =     32334.2264150943;
18165 +            V_totalsal  =     32513.3333333333;
18166 +            END;
18167 +          ELSE IF  NOT MISSING(nonstsal ) AND
18168 +                         32741.5 <= nonstsal  AND
18169 +            nonstsal  <              33718.5 THEN DO;
18170 +            _NODE_  =                   85;
18171 +            _LEAF_  =                    5;
18172 +            P_totalsal  =             33243.24;
18173 +            V_totalsal  =     33195.8695652173;
18174 +            END;
18175 +          ELSE IF  NOT MISSING(nonstsal ) AND
18176 +                         33718.5 <= nonstsal  THEN DO;
18177 +            _NODE_  =                   86;
18178 +            _LEAF_  =                    6;
18179 +            P_totalsal  =     34083.4098360655;
18180 +            V_totalsal  =              34068.5;
18181 +            END;
18182 +          ELSE DO;
18183 +            _NODE_  =                   83;
18184 +            _LEAF_  =                    3;
18185 +            P_totalsal  =     30450.7586206896;
18186 +            V_totalsal  =     30453.0961538461;
18187 +            END;
18188 +          END;
18189 +        ELSE IF  NOT MISSING(nonstsal ) AND
18190 +                       34677.5 <= nonstsal  AND
18191 +          nonstsal  <              39454.5 THEN DO;
18192 +          IF  NOT MISSING(nonstsal ) AND
18193 +            nonstsal  <              36040.5 THEN DO;
18194 +            _NODE_  =                   87;
18195 +            _LEAF_  =                    7;
18196 +            P_totalsal  =     35447.7261904761;
18197 +            V_totalsal  =     35448.6764705882;
18198 +            END;
18199 +          ELSE IF  NOT MISSING(nonstsal ) AND
18200 +                           37165 <= nonstsal  AND
18201 +            nonstsal  <              38012.5 THEN DO;
18202 +            _NODE_  =                   89;
18203 +            _LEAF_  =                    9;
18204 +            P_totalsal  =      37626.074074074;
18205 +            V_totalsal  =              37719.2;
18206 +            END;
18207 +          ELSE IF  NOT MISSING(nonstsal ) AND
18208 +                         38012.5 <= nonstsal  THEN DO;
18209 +            _NODE_  =                   90;
18210 +            _LEAF_  =                   10;
18211 +            P_totalsal  =      38803.676056338;
18212 +            V_totalsal  =            38724.225;
18213 +            END;
18214 +          ELSE DO;
18215 +            _NODE_  =                   88;
18216 +            _LEAF_  =                    8;
18217 +            P_totalsal  =     36547.0388349514;
18218 +            V_totalsal  =          36588.59375;
18219 +            END;
18220 +          END;
18221 +        ELSE DO;
18222 +          IF  NOT MISSING(nonstsal ) AND
18223 +            nonstsal  <                40735 THEN DO;
18224 +            _NODE_  =                   91;
18225 +            _LEAF_  =                   11;
18226 +            P_totalsal  =     40126.2604166666;
18227 +            V_totalsal  =     40086.8163265306;
18228 +            END;
18229 +          ELSE IF  NOT MISSING(nonstsal ) AND
18230 +                           42604 <= nonstsal  THEN DO;
18231 +            _NODE_  =                   93;
18232 +            _LEAF_  =                   13;
18233 +            P_totalsal  =     43390.2297297297;
18234 +            V_totalsal  =              43219.5;
18235 +            END;
18236 +          ELSE DO;
18237 +            _NODE_  =                   92;
18238 +            _LEAF_  =                   12;
18239 +            P_totalsal  =     41634.7027027027;
18240 +            V_totalsal  =     41675.6777777777;
18241 +            END;
18242 +          END;
18243 +        END;
18244 +      END;
18245 +    END;
18246 +  END;
18247 +
18248 +*****  RESIDUALS R_ *************;
18249 +IF MISSING( totalsal ) THEN R_totalsal  = .;
18250 +ELSE R_totalsal  = totalsal  - P_totalsal ;
18251 +
18252 +****************************************************************;
18253 +******          END OF DECISION TREE SCORING CODE         ******;
18254 +****************************************************************;
18255 +
18256 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18257  run;

NOTE: DATA STEP view saved on file EMWS1.TREE4_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

18258  quit;
18259  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

18260  filename emflow "C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\EMFLOWSCORE.sas";
18261  *------------------------------------------------------------*;
18262  * Tree4: Scoring TEST data;
18263  *------------------------------------------------------------*;
18264  data EMWS1.Tree4_TEST
18265  / view=EMWS1.Tree4_TEST
18266  ;
18267  set EMWS1.Part_TEST
18268  ;
18269  %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Users\Intern Three\Documents\Thi Duong\SPRING 16\BUS 458H\HW\458 FINAL PROJECT\UNC SALARY SYSTEM\Workspaces\EMWS1\Tree4\EMFLOWSCORE.sas.
18270 +****************************************************************;
18271 +******             DECISION TREE SCORING CODE             ******;
18272 +****************************************************************;
18273 +
18274 +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
18275 +LENGTH _WARN_  $    4;
18276 +
18277 +******              LABELS FOR NEW VARIABLES              ******;
18278 +label _NODE_ = 'Node' ;
18279 +label _LEAF_ = 'Leaf' ;
18280 +label P_totalsal = 'Predicted: totalsal' ;
18281 +label V_totalsal = 'Validated: totalsal' ;
18282 +label R_totalsal = 'Residual: totalsal' ;
18283 +label _WARN_ = 'Warnings' ;
18284 +
18285 +
18286 +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
18287 +LENGTH _ARBFMT_30 $     30; DROP _ARBFMT_30;
18288 +_ARBFMT_30 = ' '; /* Initialize to avoid warning. */
18289 +LENGTH _ARBFMT_28 $     28; DROP _ARBFMT_28;
18290 +_ARBFMT_28 = ' '; /* Initialize to avoid warning. */
18291 +
18292 +
18293 +******             ASSIGN OBSERVATION TO NODE             ******;
18294 +IF  NOT MISSING(nonstsal ) AND
18295 +               95900.5 <= nonstsal  AND
18296 +  nonstsal  <             180312.5 THEN DO;
18297 +  IF  NOT MISSING(statesal ) AND
18298 +                    2599 <= statesal  AND
18299 +    statesal  <              15464.5 THEN DO;
18300 +    _NODE_  =                   11;
18301 +    _LEAF_  =                   69;
18302 +    P_totalsal  =     145295.301886792;
18303 +    V_totalsal  =     138556.863636363;
18304 +    END;
18305 +  ELSE IF  NOT MISSING(statesal ) AND
18306 +                 15464.5 <= statesal  AND
18307 +    statesal  <                48253 THEN DO;
18308 +    _NODE_  =                   12;
18309 +    _LEAF_  =                   70;
18310 +    P_totalsal  =     166528.224137931;
18311 +    V_totalsal  =     155472.709677419;
18312 +    END;
18313 +  ELSE IF  NOT MISSING(statesal ) AND
18314 +                   48253 <= statesal  THEN DO;
18315 +    _NODE_  =                   13;
18316 +    _LEAF_  =                   71;
18317 +    P_totalsal  =            233685.12;
18318 +    V_totalsal  =      231484.59090909;
18319 +    END;
18320 +  ELSE DO;
18321 +    IF  NOT MISSING(nonstsal ) AND
18322 +                    109950 <= nonstsal  AND
18323 +      nonstsal  <             120749.5 THEN DO;
18324 +      _NODE_  =                   27;
18325 +      _LEAF_  =                   66;
18326 +      P_totalsal  =     114770.807692307;
18327 +      V_totalsal  =            115916.45;
18328 +      END;
18329 +    ELSE IF  NOT MISSING(nonstsal ) AND
18330 +                  120749.5 <= nonstsal  AND
18331 +      nonstsal  <             149359.5 THEN DO;
18332 +      _NODE_  =                   28;
18333 +      _LEAF_  =                   67;
18334 +      P_totalsal  =     134294.632653061;
18335 +      V_totalsal  =     135776.804878048;
18336 +      END;
18337 +    ELSE IF  NOT MISSING(nonstsal ) AND
18338 +                  149359.5 <= nonstsal  THEN DO;
18339 +      _NODE_  =                   29;
18340 +      _LEAF_  =                   68;
18341 +      P_totalsal  =     165185.515151515;
18342 +      V_totalsal  =     166636.777777777;
18343 +      END;
18344 +    ELSE DO;
18345 +      _NODE_  =                   26;
18346 +      _LEAF_  =                   65;
18347 +      P_totalsal  =     101778.095238095;
18348 +      V_totalsal  =     102117.243902439;
18349 +      END;
18350 +    END;
18351 +  END;
18352 +ELSE IF  NOT MISSING(nonstsal ) AND
18353 +              180312.5 <= nonstsal  AND
18354 +  nonstsal  <             290367.5 THEN DO;
18355 +  IF  NOT MISSING(nonstsal ) AND
18356 +    nonstsal  <             209437.5 THEN DO;
18357 +    _NODE_  =                   14;
18358 +    _LEAF_  =                   72;
18359 +    P_totalsal  =     205333.694117647;
18360 +    V_totalsal  =     204150.071428571;
18361 +    END;
18362 +  ELSE IF  NOT MISSING(nonstsal ) AND
18363 +                209437.5 <= nonstsal  AND
18364 +    nonstsal  <               235147 THEN DO;
18365 +    _NODE_  =                   15;
18366 +    _LEAF_  =                   73;
18367 +    P_totalsal  =     234605.621212121;
18368 +    V_totalsal  =     241105.225806451;
18369 +    END;
18370 +  ELSE DO;
18371 +    _NODE_  =                   16;
18372 +    _LEAF_  =                   74;
18373 +    P_totalsal  =     273957.193877551;
18374 +    V_totalsal  =     271501.285714285;
18375 +    END;
18376 +  END;
18377 +ELSE IF  NOT MISSING(nonstsal ) AND
18378 +              290367.5 <= nonstsal  THEN DO;
18379 +  _NODE_  =                    5;
18380 +  _LEAF_  =                   75;
18381 +  P_totalsal  =     389678.802631579;
18382 +  V_totalsal  =     377767.533333333;
18383 +  END;
18384 +ELSE DO;
18385 +  IF  NOT MISSING(statesal ) AND
18386 +                 60301.5 <= statesal  AND
18387 +    statesal  <               108099 THEN DO;
18388 +    IF  NOT MISSING(nonstsal ) AND
18389 +                    9900.5 <= nonstsal  AND
18390 +      nonstsal  <              34813.5 THEN DO;
18391 +      _NODE_  =                   22;
18392 +      _LEAF_  =                   58;
18393 +      P_totalsal  =     103556.683673469;
18394 +      V_totalsal  =     104522.135135135;
18395 +      END;
18396 +    ELSE IF  NOT MISSING(nonstsal ) AND
18397 +                   34813.5 <= nonstsal  THEN DO;
18398 +      _NODE_  =                   23;
18399 +      _LEAF_  =                   59;
18400 +      P_totalsal  =     141148.098901098;
18401 +      V_totalsal  =             136074.7;
18402 +      END;
18403 +    ELSE DO;
18404 +      IF  NOT MISSING(statesal ) AND
18405 +                       71097 <= statesal  AND
18406 +        statesal  <              81763.5 THEN DO;
18407 +        IF  NOT MISSING(statesal ) AND
18408 +          statesal  <                74875 THEN DO;
18409 +          _NODE_  =                   72;
18410 +          _LEAF_  =                   51;
18411 +          P_totalsal  =     73448.6666666666;
18412 +          V_totalsal  =     73306.9090909091;
18413 +          END;
18414 +        ELSE IF  NOT MISSING(statesal ) AND
18415 +                         74875 <= statesal  AND
18416 +          statesal  <                76825 THEN DO;
18417 +          _NODE_  =                   73;
18418 +          _LEAF_  =                   52;
18419 +          P_totalsal  =     75918.0727272727;
18420 +          V_totalsal  =     76591.7058823529;
18421 +          END;
18422 +        ELSE DO;
18423 +          _NODE_  =                   74;
18424 +          _LEAF_  =                   53;
18425 +          P_totalsal  =     79991.7974683544;
18426 +          V_totalsal  =     79243.1842105263;
18427 +          END;
18428 +        END;
18429 +      ELSE IF  NOT MISSING(statesal ) AND
18430 +                     81763.5 <= statesal  AND
18431 +        statesal  <                92774 THEN DO;
18432 +        IF  NOT MISSING(statesal ) AND
18433 +          statesal  <                84994 THEN DO;
18434 +          _NODE_  =                   75;
18435 +          _LEAF_  =                   54;
18436 +          P_totalsal  =     84096.6315789473;
18437 +          V_totalsal  =             84898.44;
18438 +          END;
18439 +        ELSE DO;
18440 +          _NODE_  =                   76;
18441 +          _LEAF_  =                   55;
18442 +          P_totalsal  =     90010.5222222222;
18443 +          V_totalsal  =     89579.7142857143;
18444 +          END;
18445 +        END;
18446 +      ELSE IF  NOT MISSING(statesal ) AND
18447 +                       92774 <= statesal  THEN DO;
18448 +        IF  NOT MISSING(statesal ) AND
18449 +                        100867 <= statesal  THEN DO;
18450 +          _NODE_  =                   78;
18451 +          _LEAF_  =                   57;
18452 +          P_totalsal  =             105425.5;
18453 +          V_totalsal  =     105827.566666666;
18454 +          END;
18455 +        ELSE DO;
18456 +          _NODE_  =                   77;
18457 +          _LEAF_  =                   56;
18458 +          P_totalsal  =     97038.7866666666;
18459 +          V_totalsal  =                97273;
18460 +          END;
18461 +        END;
18462 +      ELSE DO;
18463 +        IF  NOT MISSING(statesal ) AND
18464 +          statesal  <              63410.5 THEN DO;
18465 +          _NODE_  =                   69;
18466 +          _LEAF_  =                   48;
18467 +          P_totalsal  =     62533.6964285714;
18468 +          V_totalsal  =     63382.3870967742;
18469 +          END;
18470 +        ELSE IF  NOT MISSING(statesal ) AND
18471 +                       63410.5 <= statesal  AND
18472 +          statesal  <              66247.5 THEN DO;
18473 +          _NODE_  =                   70;
18474 +          _LEAF_  =                   49;
18475 +          P_totalsal  =     65306.0196078431;
18476 +          V_totalsal  =     64981.0689655172;
18477 +          END;
18478 +        ELSE DO;
18479 +          _NODE_  =                   71;
18480 +          _LEAF_  =                   50;
18481 +          P_totalsal  =     69608.8775510204;
18482 +          V_totalsal  =     70048.5675675675;
18483 +          END;
18484 +        END;
18485 +      END;
18486 +    END;
18487 +  ELSE IF  NOT MISSING(statesal ) AND
18488 +                  108099 <= statesal  AND
18489 +    statesal  <               162093 THEN DO;
18490 +    IF  NOT MISSING(nonstsal ) AND
18491 +                   22783.5 <= nonstsal  THEN DO;
18492 +      _NODE_  =                   25;
18493 +      _LEAF_  =                   63;
18494 +      P_totalsal  =             172191.4;
18495 +      V_totalsal  =     175374.619047619;
18496 +      END;
18497 +    ELSE DO;
18498 +      IF  NOT MISSING(statesal ) AND
18499 +                    130026.5 <= statesal  THEN DO;
18500 +        _NODE_  =                   47;
18501 +        _LEAF_  =                   62;
18502 +        P_totalsal  =     147090.839080459;
18503 +        V_totalsal  =          147979.8125;
18504 +        END;
18505 +      ELSE DO;
18506 +        IF  NOT MISSING(statesal ) AND
18507 +                      117576.5 <= statesal  THEN DO;
18508 +          _NODE_  =                   80;
18509 +          _LEAF_  =                   61;
18510 +          P_totalsal  =     128431.728813559;
18511 +          V_totalsal  =     126284.958333333;
18512 +          END;
18513 +        ELSE DO;
18514 +          _NODE_  =                   79;
18515 +          _LEAF_  =                   60;
18516 +          P_totalsal  =          116553.6625;
18517 +          V_totalsal  =     115684.620689655;
18518 +          END;
18519 +        END;
18520 +      END;
18521 +    END;
18522 +  ELSE IF  NOT MISSING(statesal ) AND
18523 +                  162093 <= statesal  THEN DO;
18524 +    _NODE_  =                    9;
18525 +    _LEAF_  =                   64;
18526 +    P_totalsal  =     224578.765306122;
18527 +    V_totalsal  =     236071.901960784;
18528 +    END;
18529 +  ELSE DO;
18530 +    IF  NOT MISSING(nonstsal ) AND
18531 +                   43903.5 <= nonstsal  AND
18532 +      nonstsal  <              57561.5 THEN DO;
18533 +      IF  NOT MISSING(nonstsal ) AND
18534 +        nonstsal  <              47236.5 THEN DO;
18535 +        _ARBFMT_30 = PUT( exempt2 , $30.);
18536 +         %DMNORMIP( _ARBFMT_30);
18537 +        IF _ARBFMT_30 IN ('EXEMPT' ) THEN DO;
18538 +          _NODE_  =                   60;
18539 +          _LEAF_  =                   30;
18540 +          P_totalsal  =     54232.3275862069;
18541 +          V_totalsal  =     55741.5263157894;
18542 +          END;
18543 +        ELSE DO;
18544 +          _NODE_  =                   59;
18545 +          _LEAF_  =                   29;
18546 +          P_totalsal  =     45695.6432160804;
18547 +          V_totalsal  =     47597.4642857142;
18548 +          END;
18549 +        END;
18550 +      ELSE IF  NOT MISSING(nonstsal ) AND
18551 +                       52023 <= nonstsal  THEN DO;
18552 +        _NODE_  =                   36;
18553 +        _LEAF_  =                   35;
18554 +        P_totalsal  =     56000.9809160305;
18555 +        V_totalsal  =     56889.7950819672;
18556 +        END;
18557 +      ELSE DO;
18558 +        _ARBFMT_28 = PUT( position , $28.);
18559 +         %DMNORMIP( _ARBFMT_28);
18560 +        IF _ARBFMT_28 IN ('OTHER' ) THEN DO;
18561 +          _NODE_  =                   61;
18562 +          _LEAF_  =                   31;
18563 +          P_totalsal  =     50091.2717391304;
18564 +          V_totalsal  =     50038.6444444444;
18565 +          END;
18566 +        ELSE IF _ARBFMT_28 IN ('ADMIN' ,'ASSISTANT OTHER' ,'BUILDING' ,
18567 +          'CLINICAL OTHER' ,'CLINICAL RESEARCH' ) THEN DO;
18568 +          _NODE_  =                   62;
18569 +          _LEAF_  =                   32;
18570 +          P_totalsal  =     49622.3728813559;
18571 +          V_totalsal  =     49552.6071428571;
18572 +          END;
18573 +        ELSE IF _ARBFMT_28 IN ('EXECUTIVE' ,'RESEARCH OTHER' ,
18574 +        'OTHER PROGRAM' ,'PROJECT MANAGER' ,'RESEARCH ASSOCIATE' ,
18575 +          'RESEARCH SPECIALIST' ,'RESEARCH TECHNICIAN' ) THEN DO;
18576 +          _NODE_  =                   64;
18577 +          _LEAF_  =                   34;
18578 +          P_totalsal  =          50058.90625;
18579 +          V_totalsal  =                49517;
18580 +          END;
18581 +        ELSE DO;
18582 +          _NODE_  =                   63;
18583 +          _LEAF_  =                   33;
18584 +          P_totalsal  =     57550.0181818181;
18585 +          V_totalsal  =     56288.8518518518;
18586 +          END;
18587 +        END;
18588 +      END;
18589 +    ELSE IF  NOT MISSING(nonstsal ) AND
18590 +                   57561.5 <= nonstsal  AND
18591 +      nonstsal  <                74256 THEN DO;
18592 +      IF  NOT MISSING(statesal ) AND
18593 +                        8802 <= statesal  THEN DO;
18594 +        _NODE_  =                   38;
18595 +        _LEAF_  =                   44;
18596 +        P_totalsal  =              94400.2;
18597 +        V_totalsal  =     98545.4285714285;
18598 +        END;
18599 +      ELSE DO;
18600 +        IF  NOT MISSING(nonstsal ) AND
18601 +          nonstsal  <              60502.5 THEN DO;
18602 +          IF  NOT MISSING(nonstsal ) AND
18603 +            nonstsal  <              59070.5 THEN DO;
18604 +            _NODE_  =                  108;
18605 +            _LEAF_  =                   36;
18606 +            P_totalsal  =             58257.96;
18607 +            V_totalsal  =              58209.6;
18608 +            END;
18609 +          ELSE DO;
18610 +            _NODE_  =                  109;
18611 +            _LEAF_  =                   37;
18612 +            P_totalsal  =     59803.3114754098;
18613 +            V_totalsal  =     59782.6296296296;
18614 +            END;
18615 +          END;
18616 +        ELSE IF  NOT MISSING(nonstsal ) AND
18617 +                       60502.5 <= nonstsal  AND
18618 +          nonstsal  <              64148.5 THEN DO;
18619 +          IF  NOT MISSING(nonstsal ) AND
18620 +                           62434 <= nonstsal  THEN DO;
18621 +            _NODE_  =                  111;
18622 +            _LEAF_  =                   39;
18623 +            P_totalsal  =     63386.0882352941;
18624 +            V_totalsal  =             63171.84;
18625 +            END;
18626 +          ELSE DO;
18627 +            _NODE_  =                  110;
18628 +            _LEAF_  =                   38;
18629 +            P_totalsal  =     61480.6913580247;
18630 +            V_totalsal  =     61572.9210526315;
18631 +            END;
18632 +          END;
18633 +        ELSE IF  NOT MISSING(nonstsal ) AND
18634 +                       64148.5 <= nonstsal  AND
18635 +          nonstsal  <                68310 THEN DO;
18636 +          IF  NOT MISSING(nonstsal ) AND
18637 +                         66244.5 <= nonstsal  THEN DO;
18638 +            _NODE_  =                  113;
18639 +            _LEAF_  =                   41;
18640 +            P_totalsal  =     67381.0434782608;
18641 +            V_totalsal  =             67396.05;
18642 +            END;
18643 +          ELSE DO;
18644 +            _NODE_  =                  112;
18645 +            _LEAF_  =                   40;
18646 +            P_totalsal  =     65295.6666666666;
18647 +            V_totalsal  =     65467.7567567567;
18648 +            END;
18649 +          END;
18650 +        ELSE DO;
18651 +          IF  NOT MISSING(nonstsal ) AND
18652 +            nonstsal  <                70853 THEN DO;
18653 +            _NODE_  =                  114;
18654 +            _LEAF_  =                   42;
18655 +            P_totalsal  =     70004.1267605633;
18656 +            V_totalsal  =     69839.4864864864;
18657 +            END;
18658 +          ELSE DO;
18659 +            _NODE_  =                  115;
18660 +            _LEAF_  =                   43;
18661 +            P_totalsal  =     72698.8068181818;
18662 +            V_totalsal  =     72584.0769230769;
18663 +            END;
18664 +          END;
18665 +        END;
18666 +      END;
18667 +    ELSE IF  NOT MISSING(nonstsal ) AND
18668 +                     74256 <= nonstsal  THEN DO;
18669 +      IF  NOT MISSING(nonstsal ) AND
18670 +                     81491.5 <= nonstsal  AND
18671 +        nonstsal  <              86766.5 THEN DO;
18672 +        _NODE_  =                   40;
18673 +        _LEAF_  =                   46;
18674 +        P_totalsal  =                85762;
18675 +        V_totalsal  =     85909.1818181818;
18676 +        END;
18677 +      ELSE IF  NOT MISSING(nonstsal ) AND
18678 +                     86766.5 <= nonstsal  THEN DO;
18679 +        _NODE_  =                   41;
18680 +        _LEAF_  =                   47;
18681 +        P_totalsal  =     94602.0574712643;
18682 +        V_totalsal  =     94566.3731343283;
18683 +        END;
18684 +      ELSE DO;
18685 +        _NODE_  =                   39;
18686 +        _LEAF_  =                   45;
18687 +        P_totalsal  =     80472.2113402061;
18688 +        V_totalsal  =      81919.048192771;
18689 +        END;
18690 +      END;
18691 +    ELSE DO;
18692 +      IF  NOT MISSING(statesal ) AND
18693 +                       538.5 <= statesal  AND
18694 +        statesal  <                30580 THEN DO;
18695 +        IF  NOT MISSING(nonstsal ) AND
18696 +                         13022 <= nonstsal  THEN DO;
18697 +          IF  NOT MISSING(statesal ) AND
18698 +                         20121.5 <= statesal  THEN DO;
18699 +            _NODE_  =                   98;
18700 +            _LEAF_  =                   18;
18701 +            P_totalsal  =     50866.2777777777;
18702 +            V_totalsal  =     52344.2777777777;
18703 +            END;
18704 +          ELSE DO;
18705 +            _NODE_  =                   97;
18706 +            _LEAF_  =                   17;
18707 +            P_totalsal  =     41342.3174603174;
18708 +            V_totalsal  =     41047.4666666666;
18709 +            END;
18710 +          END;
18711 +        ELSE DO;
18712 +          IF  NOT MISSING(statesal ) AND
18713 +            statesal  <              18782.5 THEN DO;
18714 +            _NODE_  =                   94;
18715 +            _LEAF_  =                   14;
18716 +            P_totalsal  =      12629.343283582;
18717 +            V_totalsal  =     12658.5348837209;
18718 +            END;
18719 +          ELSE IF  NOT MISSING(statesal ) AND
18720 +                         26357.5 <= statesal  THEN DO;
18721 +            _NODE_  =                   96;
18722 +            _LEAF_  =                   16;
18723 +            P_totalsal  =     28817.1833333333;
18724 +            V_totalsal  =     28912.4565217391;
18725 +            END;
18726 +          ELSE DO;
18727 +            _NODE_  =                   95;
18728 +            _LEAF_  =                   15;
18729 +            P_totalsal  =     25853.3032258064;
18730 +            V_totalsal  =     25965.6129032258;
18731 +            END;
18732 +          END;
18733 +        END;
18734 +      ELSE IF  NOT MISSING(statesal ) AND
18735 +                       30580 <= statesal  AND
18736 +        statesal  <                47333 THEN DO;
18737 +        IF  NOT MISSING(nonstsal ) AND
18738 +                          4981 <= nonstsal  AND
18739 +          nonstsal  <              16450.5 THEN DO;
18740 +          _NODE_  =                   55;
18741 +          _LEAF_  =                   23;
18742 +          P_totalsal  =     48611.9259259259;
18743 +          V_totalsal  =     48270.3846153846;
18744 +          END;
18745 +        ELSE IF  NOT MISSING(nonstsal ) AND
18746 +                       16450.5 <= nonstsal  THEN DO;
18747 +          _NODE_  =                   56;
18748 +          _LEAF_  =                   24;
18749 +          P_totalsal  =     67858.2181818181;
18750 +          V_totalsal  =     64259.0526315789;
18751 +          END;
18752 +        ELSE DO;
18753 +          IF  NOT MISSING(statesal ) AND
18754 +            statesal  <                35530 THEN DO;
18755 +            _NODE_  =                   99;
18756 +            _LEAF_  =                   19;
18757 +            P_totalsal  =      33626.054054054;
18758 +            V_totalsal  =     33857.8913043478;
18759 +            END;
18760 +          ELSE IF  NOT MISSING(statesal ) AND
18761 +                           35530 <= statesal  AND
18762 +            statesal  <                39394 THEN DO;
18763 +            _NODE_  =                  100;
18764 +            _LEAF_  =                   20;
18765 +            P_totalsal  =     37523.1486486486;
18766 +            V_totalsal  =     38060.2537313432;
18767 +            END;
18768 +          ELSE IF  NOT MISSING(statesal ) AND
18769 +                         43607.5 <= statesal  THEN DO;
18770 +            _NODE_  =                  102;
18771 +            _LEAF_  =                   22;
18772 +            P_totalsal  =     45252.0802469135;
18773 +            V_totalsal  =     45568.5694444444;
18774 +            END;
18775 +          ELSE DO;
18776 +            _NODE_  =                  101;
18777 +            _LEAF_  =                   21;
18778 +            P_totalsal  =     41803.8781725888;
18779 +            V_totalsal  =     41783.8023255814;
18780 +            END;
18781 +          END;
18782 +        END;
18783 +      ELSE IF  NOT MISSING(statesal ) AND
18784 +                       47333 <= statesal  THEN DO;
18785 +        IF  NOT MISSING(nonstsal ) AND
18786 +                          2075 <= nonstsal  THEN DO;
18787 +          _NODE_  =                   58;
18788 +          _LEAF_  =                   28;
18789 +          P_totalsal  =     67737.4387755102;
18790 +          V_totalsal  =     68617.4117647059;
18791 +          END;
18792 +        ELSE DO;
18793 +          IF  NOT MISSING(statesal ) AND
18794 +                         51179.5 <= statesal  AND
18795 +            statesal  <              56763.5 THEN DO;
18796 +            _NODE_  =                  104;
18797 +            _LEAF_  =                   26;
18798 +            P_totalsal  =              53924.5;
18799 +            V_totalsal  =     54091.4716981132;
18800 +            END;
18801 +          ELSE IF  NOT MISSING(statesal ) AND
18802 +                         56763.5 <= statesal  THEN DO;
18803 +            _NODE_  =                  105;
18804 +            _LEAF_  =                   27;
18805 +            P_totalsal  =     58596.2873563218;
18806 +            V_totalsal  =      58636.081081081;
18807 +            END;
18808 +          ELSE DO;
18809 +            _NODE_  =                  103;
18810 +            _LEAF_  =                   25;
18811 +            P_totalsal  =     49365.8629032258;
18812 +            V_totalsal  =      49164.224137931;
18813 +            END;
18814 +          END;
18815 +        END;
18816 +      ELSE DO;
18817 +        IF  NOT MISSING(nonstsal ) AND
18818 +          nonstsal  <              29011.5 THEN DO;
18819 +          IF  NOT MISSING(nonstsal ) AND
18820 +                           26315 <= nonstsal  THEN DO;
18821 +            _NODE_  =                   82;
18822 +            _LEAF_  =                    2;
18823 +            P_totalsal  =              27963.5;
18824 +            V_totalsal  =     28144.3809523809;
18825 +            END;
18826 +          ELSE DO;
18827 +            _NODE_  =                   81;
18828 +            _LEAF_  =                    1;
18829 +            P_totalsal  =     23373.5820895522;
18830 +            V_totalsal  =             24206.88;
18831 +            END;
18832 +          END;
18833 +        ELSE IF  NOT MISSING(nonstsal ) AND
18834 +                       29011.5 <= nonstsal  AND
18835 +          nonstsal  <              34677.5 THEN DO;
18836 +          IF  NOT MISSING(nonstsal ) AND
18837 +                           31786 <= nonstsal  AND
18838 +            nonstsal  <              32741.5 THEN DO;
18839 +            _NODE_  =                   84;
18840 +            _LEAF_  =                    4;
18841 +            P_totalsal  =     32334.2264150943;
18842 +            V_totalsal  =     32513.3333333333;
18843 +            END;
18844 +          ELSE IF  NOT MISSING(nonstsal ) AND
18845 +                         32741.5 <= nonstsal  AND
18846 +            nonstsal  <              33718.5 THEN DO;
18847 +            _NODE_  =                   85;
18848 +            _LEAF_  =                    5;
18849 +            P_totalsal  =             33243.24;
18850 +            V_totalsal  =     33195.8695652173;
18851 +            END;
18852 +          ELSE IF  NOT MISSING(nonstsal ) AND
18853 +                         33718.5 <= nonstsal  THEN DO;
18854 +            _NODE_  =                   86;
18855 +            _LEAF_  =                    6;
18856 +            P_totalsal  =     34083.4098360655;
18857 +            V_totalsal  =              34068.5;
18858 +            END;
18859 +          ELSE DO;
18860 +            _NODE_  =                   83;
18861 +            _LEAF_  =                    3;
18862 +            P_totalsal  =     30450.7586206896;
18863 +            V_totalsal  =     30453.0961538461;
18864 +            END;
18865 +          END;
18866 +        ELSE IF  NOT MISSING(nonstsal ) AND
18867 +                       34677.5 <= nonstsal  AND
18868 +          nonstsal  <              39454.5 THEN DO;
18869 +          IF  NOT MISSING(nonstsal ) AND
18870 +            nonstsal  <              36040.5 THEN DO;
18871 +            _NODE_  =                   87;
18872 +            _LEAF_  =                    7;
18873 +            P_totalsal  =     35447.7261904761;
18874 +            V_totalsal  =     35448.6764705882;
18875 +            END;
18876 +          ELSE IF  NOT MISSING(nonstsal ) AND
18877 +                           37165 <= nonstsal  AND
18878 +            nonstsal  <              38012.5 THEN DO;
18879 +            _NODE_  =                   89;
18880 +            _LEAF_  =                    9;
18881 +            P_totalsal  =      37626.074074074;
18882 +            V_totalsal  =              37719.2;
18883 +            END;
18884 +          ELSE IF  NOT MISSING(nonstsal ) AND
18885 +                         38012.5 <= nonstsal  THEN DO;
18886 +            _NODE_  =                   90;
18887 +            _LEAF_  =                   10;
18888 +            P_totalsal  =      38803.676056338;
18889 +            V_totalsal  =            38724.225;
18890 +            END;
18891 +          ELSE DO;
18892 +            _NODE_  =                   88;
18893 +            _LEAF_  =                    8;
18894 +            P_totalsal  =     36547.0388349514;
18895 +            V_totalsal  =          36588.59375;
18896 +            END;
18897 +          END;
18898 +        ELSE DO;
18899 +          IF  NOT MISSING(nonstsal ) AND
18900 +            nonstsal  <                40735 THEN DO;
18901 +            _NODE_  =                   91;
18902 +            _LEAF_  =                   11;
18903 +            P_totalsal  =     40126.2604166666;
18904 +            V_totalsal  =     40086.8163265306;
18905 +            END;
18906 +          ELSE IF  NOT MISSING(nonstsal ) AND
18907 +                           42604 <= nonstsal  THEN DO;
18908 +            _NODE_  =                   93;
18909 +            _LEAF_  =                   13;
18910 +            P_totalsal  =     43390.2297297297;
18911 +            V_totalsal  =              43219.5;
18912 +            END;
18913 +          ELSE DO;
18914 +            _NODE_  =                   92;
18915 +            _LEAF_  =                   12;
18916 +            P_totalsal  =     41634.7027027027;
18917 +            V_totalsal  =     41675.6777777777;
18918 +            END;
18919 +          END;
18920 +        END;
18921 +      END;
18922 +    END;
18923 +  END;
18924 +
18925 +*****  RESIDUALS R_ *************;
18926 +IF MISSING( totalsal ) THEN R_totalsal  = .;
18927 +ELSE R_totalsal  = totalsal  - P_totalsal ;
18928 +
18929 +****************************************************************;
18930 +******          END OF DECISION TREE SCORING CODE         ******;
18931 +****************************************************************;
18932 +
18933 +drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
18934  run;

NOTE: DATA STEP view saved on file EMWS1.TREE4_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

18935  quit;
18936  filename emflow;
NOTE: Fileref EMFLOW has been deassigned.

NOTE: View EMWS1.TREE4_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
18938  proc sort data=WORK.EM_USER_REPORT;
18939  by ID VIEW;
18940  run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

18941  *------------------------------------------------------------*;
18942  * Tree4: Computing metadata for TRAIN data;
18943  *------------------------------------------------------------*;

NOTE: View EMWS1.TREE4_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
19338  data WORK.MODELTEMP_INFO;
19339  set EMWS1.Tree4_EMINFO;
19340  where DATA='Tree4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
19341  run;

NOTE: There were 0 observations read from the data set EMWS1.TREE4_EMINFO.
      WHERE (DATA='Tree4') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

19342  data EMWS1.Tree4_EMINFO;
19343  length TARGET KEY $32 DATA $43;
19344  input TARGET KEY DATA $;
19345  cards;

NOTE: The data set EMWS1.TREE4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

19349  run;
19350  data EMWS1.Tree4_EMINFO;
19351  set EMWS1.Tree4_EMINFO WORK.MODELTEMP_INFO;
19352  run;

NOTE: There were 3 observations read from the data set EMWS1.TREE4_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS1.TREE4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

19353  proc sort data = EMWS1.Tree4_EMINFO NOTHREADS;
19354  by TARGET KEY;
19355  run;

NOTE: There were 3 observations read from the data set EMWS1.TREE4_EMINFO.
NOTE: The data set EMWS1.TREE4_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

19356  proc sort data = EMWS1.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
19357  by TARGET KEY;
19358  run;

NOTE: There were 3 observations read from the data set EMWS1.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

19359  proc sort data = EMWS1.Tree4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
19360  by TARGET KEY;
19361  run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS1.TREE4_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

19362  data EMWS1.Tree4_EMINFO;
19363  merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
19364  by TARGET KEY;
19365  run;

NOTE: There were 3 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS1.TREE4_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

19366  proc datasets lib=work nolist;
19367  delete TEMP_INFO SORTEDEMINFO;
19368  run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
19369  quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS1.TREE4_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS1.TREE4_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: View EMWS1.TREE4_TEST.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
